{"version":3,"sources":["components/Header.js","components/HeaderLogged.js","components/ServiceCard.js","components/SearchBar.js","components/FooterPage.js","components/IUploader.js","components/SpinnerPage.js","components/Model.js","components/ServiceInfo.js","components/signUpForm.js","components/loginForm.js","components/CategoryList.js","App.js","serviceWorker.js","index.js","img/courses.png","img/tutor.png","img/repair.png","img/travel.png","img/wellness.png","img/electrician.png"],"names":["NavbarPage","state","isOpen","collapsed","clicked","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","onClick","this","id","navbar","left","active","type","props","loadHome","loadUploadService","loadCategoryListPage","right","target","href","loadLogin","loadSignUp","Component","NavbarPageLog","username","checkLogout","ServiceCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","show","_this2","react","Card","CardImg","top","width","height","src","course","alt","CardBody","CardTitle","Button","data-toggle","loadPage","size","tutor","repair","travel","wellness","electrician","SearchPage","md","placeholder","aria-label","gradient","rounded","FooterPage","fluid","Date","getFullYear","Uploader","require","onShow","onHide","uploadedFile","uploadedFileCloudinaryUrl","result","titleService","description","email","phone","submitted","output","country","region","handletitleChange","bind","assertThisInitialized","handledescriptionChange","handleUploadSubmit","handleTypeChange","loadAllCategory","val","files","ext","name","substr","lastIndexOf","console","log","reader","FileReader","file","onloadend","imagePreviewUrl","readAsDataURL","alert","event","value","length","_this3","fetch","method","headers","Accept","Content-Type","Access-Control-Allow-Origin","Cache-Control","then","response","ok","json","Success","view","test","Data","map","push","i","categoryRows","catch","ex","_this4","request","post","field","end","err","error","body","secure_url","JSON","stringify","Name","TypeName","LinkAccountId","Description","ImageLink","AccountName","ServiceLocation","setTimeout","_this5","dist","onDrop","onImageDrop","_ref","over","overDocument","handleImageUpload","preventDefault","_this6","_this$state","onSubmit","afterUpload","onChange","caret","basic","rcrs_es","selectCountry","selectRegion","htmlFor","rows","SpinnerPage","Fragment","role","ModalPage","modal","toggle","contactEmail","phoneNo","uuidv4","dateFormat","ServiceInfo","_Component","serviceAll","link","title","createDate","contactName","contactNo","showContact","loadAllService","inherits","createClass","key","components_SpinnerPage","loadingBar","category","uploadServiceButton","x","serviceInfo","ContactName","ContactEmail","ContactNo","CreateDate","serviceRows","lg","xl","hover","overlay","Model","signFormPage","fName","sName","password","isProvider","handlefNameChange","handlesNameChange","handleemailChange","handlepasswordChange","handleusernameChange","handlePhoneChange","handleSubmit","window","history","forward","onunload","checkLog","UserName","Password","FirstName","LastName","PhoneNo","Email","redirect","setUsername","loggedin","aria-describedby","loading","React","LoginFormPage","onLoginShow","loginshow","onLoginHide","handlepasswordLoginChange","handleusernameLoginChange","handleLoginSubmit","setProvider","split","loginloading","CategoryList","linkName","previousName","checkService","listName","aria-hidden","App","Home","NavBarChange","SearchBar","ServiceCard_ServiceCard","components_FooterPage","UploadService","IUploader_Uploader","provider","Login","loginForm_LoginFormPage","SignUp","signUpForm_signFormPage","CategoryListPage","CategoryList_CategoryList","servicePage","ServiceInfo_ServiceInfo","loadPageName","isLogged","default","Tutor","CoursePage","Repairs","loadHeader","Header","HeaderLogged","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reload","ReactDOM","render","BrowserRouter","basename","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","concat","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.304379f4.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBDropdown} from \"mdbreact\";\r\n\r\nclass NavbarPage extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        collapsed: false,\r\n        clicked: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n    render() {\r\n        return (\r\n            <MDBNavbar color=\"blue\" dark expand=\"md\">\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">LSH</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem active>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn \" onClick={this.props.loadHome}>Home</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadUploadService}>Place your services</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadCategoryListPage}>Services</button>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                            <a target=\"_blank\" href=\"https://drive.google.com/file/d/1uuklEg_Hk34VzAvGMgKaOW11uNGMpVWl/view?usp=sharing\" className=\"btn btn-link navBtn\">Download APP!</a>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                    <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadLogin}>Login</button>\r\n                                     |\r\n                                    <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadSignUp}>Sign up</button>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPage;","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBDropdown} from \"mdbreact\";\r\n\r\nclass NavbarPageLog extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        collapsed: false,\r\n        clicked: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MDBNavbar color=\"blue\" dark expand=\"md\">\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">LSH</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem active>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadHome}>Home</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadUploadService}>Place your services</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadCategoryListPage}>Services</button>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                            <p className=\"navBtn nameText\">Hi {this.props.username} |</p>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <a target=\"_blank\" href=\"https://drive.google.com/file/d/1uuklEg_Hk34VzAvGMgKaOW11uNGMpVWl/view?usp=sharing\" className=\"btn btn-link navBtn\">Download APP!</a>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.checkLogout}>Log out</button>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPageLog;","import React, {Component, Fragment} from 'react';\r\nimport course from '../img/courses.png'\r\nimport tutor from '../img/tutor.png'\r\nimport repair from '../img/repair.png'\r\nimport travel from '../img/travel.png'\r\nimport wellness from '../img/wellness.png'\r\nimport electrician from '../img/electrician.png'\r\n\r\n\r\nimport {\r\n    Button, Card, CardImg, CardBody,\r\n    CardTitle\r\n} from 'reactstrap';\r\nimport {MDBListGroupItem} from \"mdbreact\";\r\n\r\n\r\nexport default class ServiceCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n            <div className=\"row\">\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={course} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Courses</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Courses\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={tutor} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Tutors</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Tutors\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={repair} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Repairs</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Repairs\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={travel} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Travel</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Travel\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={wellness} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Wellness</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Wellness\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={electrician} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Electrician</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Electrician\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\r\n\r\nconst SearchPage = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n        <MDBCol md=\"2.5\">\r\n            <MDBFormInline className=\"md-form\">\r\n                <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n                    Search\r\n                </MDBBtn>\r\n            </MDBFormInline>\r\n        </MDBCol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;","import React from \"react\";\r\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPage = () => {\r\n    return (\r\n        <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4 fixed-bottom\">\r\n            <div className=\"text-center py-1\">\r\n                <MDBContainer fluid>\r\n                    &copy; {new Date().getFullYear()} Copyright: <a href=\"https://weiliu423.github.io\"> Wei Liu </a>\r\n                </MDBContainer>\r\n            </div>\r\n        </MDBFooter>\r\n    );\r\n};\r\n\r\nexport default FooterPage;","import React, { Component } from 'react';\r\nimport request from 'superagent';\r\nimport {MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBListGroupItem} from \"mdbreact\";\r\nimport {StyledDropZone }  from 'react-drop-zone'\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\nconst CLOUDINARY_UPLOAD_PRESET = 'lshserviceupload';\r\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/predator423/image/upload/';\r\nconst uuidv4 = require('uuid/v4');\r\n\r\n\r\nexport default class Uploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uploadedFile: null,\r\n            uploadedFileCloudinaryUrl: '',\r\n            show: true,\r\n            result: '',\r\n            titleService: '',\r\n            description: '',\r\n            email: '',\r\n            phone: '',\r\n            type: 'Choose a category',\r\n            submitted: false,\r\n            output: [],\r\n            country: '', region: ''\r\n        };\r\n        this.handletitleChange = this.handletitleChange.bind(this);\r\n        this.handledescriptionChange = this.handledescriptionChange.bind(this);\r\n        this.handleUploadSubmit = this.handleUploadSubmit.bind(this);\r\n        this.handleTypeChange = this.handleTypeChange.bind(this);\r\n        this.onShow = this.onShow.bind(this);\r\n        this.loadAllCategory();\r\n    }\r\n    selectCountry (val) {\r\n        this.setState({ country: val });\r\n    }\r\n    selectRegion (val) {\r\n        this.setState({ region: val });\r\n    }\r\n    onShow = ()=> {\r\n        this.setState({ show: true })\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    onImageDrop(files) {\r\n        var ext = files.name.substr(files.name.lastIndexOf('.') + 1);\r\n        console.log(ext);\r\n        if(ext === \"png\" ||ext === \"jpg\"||ext === \"jpeg\" ) {\r\n            this.setState({\r\n                uploadedFile: files\r\n            });\r\n            let reader = new FileReader();\r\n            let file = this.state.uploadedFile;\r\n            reader.onloadend = () => {\r\n                this.setState({\r\n                    file: file,\r\n                    imagePreviewUrl: reader.result\r\n                });\r\n            };\r\n            reader.readAsDataURL(file);\r\n            this.onHide();\r\n            console.log(this.state.uploadedFile);\r\n        }else {\r\n            alert('Invalid file format for image');\r\n        }\r\n    }\r\n    handletitleChange(event) {\r\n        this.setState({\r\n            titleService: event.target.value\r\n        });\r\n    }\r\n    handledescriptionChange(event) {\r\n        if(event.target.value.length < 500)\r\n        {\r\n            this.setState({\r\n                description: event.target.value\r\n            });\r\n        }else{\r\n            alert('Error occurred: Max character reached');\r\n        }\r\n\r\n    }\r\n    loadAllCategory(){\r\n        fetch('https://serviceinfo.azurewebsites.net/getAllCategories', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Cache-Control': 'no-cache'\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(json => {\r\n                    if (json.Success === true) {\r\n                        this.state= {\r\n                            output: []\r\n                        };\r\n                        let view = this.state.output;\r\n                        const  test = [];\r\n                        json.Data.map(function (name) {\r\n                            test.push(name);\r\n                            return name;\r\n                        });\r\n                        for(let i = 0; i < test.length; i++)\r\n                        {\r\n                            /*this.setState({\r\n                                output:test[i]\r\n                            });*/\r\n                            view.push(this.categoryRows(test[i]));\r\n                        }\r\n                        this.setState({\r\n                            output: view\r\n                        });\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                });\r\n            } else {\r\n                return false\r\n            }\r\n        }).catch(function (ex) {\r\n            alert('Error occur: ' + ex);\r\n        });\r\n    };\r\n    categoryRows(name){\r\n        return(\r\n            <MDBDropdownItem value={name} onClick={this.handleTypeChange}>{name}</MDBDropdownItem>\r\n        )\r\n    }\r\n    handleImageUpload(file) {\r\n        let upload = request.post(CLOUDINARY_UPLOAD_URL)\r\n            .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\r\n            .field('file', file);\r\n\r\n        upload.end((err, response) => {\r\n            if (err) {\r\n                console.error(err);\r\n            }\r\n            if (response.body.secure_url !== '') {\r\n                this.setState({\r\n                    uploadedFileCloudinaryUrl: response.body.secure_url\r\n                });\r\n                console.log(\"Img_link: \" + response.body.secure_url);\r\n                console.log(\r\n                    \"Name:\"+ this.state.titleService +\r\n                    \"\\nTypeName:\" + this.state.type +\r\n                    \"\\nLinkAccountId:\" + 1 +\r\n                    \"\\nDescription:\" + this.state.description +\r\n                    \"\\nAccountName:\" + this.props.username +\r\n                    \"\\nImageLink: \" + this.state.uploadedFileCloudinaryUrl +\r\n                    \"\\nServiceLocation: \" + this.state.region + \", \" + this.state.country\r\n                );\r\n                this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n                fetch('https://serviceinfo.azurewebsites.net/createService', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        Name: this.state.titleService,\r\n                        TypeName: this.state.type,\r\n                        LinkAccountId: 2,\r\n                        Description: this.state.description,\r\n                        ImageLink: this.state.uploadedFileCloudinaryUrl,\r\n                        AccountName: this.props.username,\r\n                        ServiceLocation: this.state.region + \", \" + this.state.country\r\n                    })\r\n                }).then(response => {\r\n                    if (response.ok) {\r\n                        response.json().then(json => {\r\n                            if (json.Success === true) {\r\n                                setTimeout(function () {\r\n                                    this.setState({result: \"Success\"});\r\n                                    this.setState({\r\n                                        uploadedFile: null,\r\n                                        uploadedFileCloudinaryUrl: '',\r\n                                        show: true,\r\n                                        titleService: '',\r\n                                        description: '',\r\n                                        email: '',\r\n                                        phone: '',\r\n                                        type: '',\r\n                                        country: '',\r\n                                        region: ''\r\n                                    });\r\n                                }.bind(this), 2000);\r\n                                return true\r\n                            } else {\r\n                                setTimeout(function () {\r\n                                    this.setState({result: \"Error occurred\"})\r\n                                }.bind(this), 2000);\r\n                                return false\r\n                            }\r\n                        });\r\n                    } else {\r\n                        setTimeout(function () {\r\n                            this.setState({result: \"Error\"})\r\n                        }.bind(this), 2000);\r\n                        return false\r\n                    }\r\n                }).catch(function (ex) {\r\n                  //  alert('Error occurred: ' + ex);\r\n                });\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    handleTypeChange(event) {\r\n        this.setState({\r\n            type: event.target.value\r\n        });\r\n    }\r\n    afterUpload(){\r\n        if(this.state.show)\r\n        {\r\n            return(\r\n                <div>\r\n                    <StyledDropZone onDrop={(file) => {this.onImageDrop(file)}}>\r\n                        {\r\n                            ({ over, overDocument }) =>\r\n                                <div>\r\n                                    {\r\n                                        over ?\r\n                                            'file is over element' :\r\n                                            overDocument ?\r\n                                                'Select or drop your file here, ideal size 400x400' :\r\n                                                'Select or drop your file here, ideal size 400x400'\r\n                                    }\r\n                                </div>\r\n                        }\r\n                    </StyledDropZone>\r\n                </div>\r\n            )\r\n        }else {\r\n\r\n            return(\r\n                <div>\r\n                    {this.state.uploadedFile === '' ? null :\r\n                        <div>\r\n                            <p>{this.state.uploadedFile.name}</p>\r\n                            <img src={this.state.imagePreviewUrl}  height=\"200vw\" width=\"200vw\" alt={\"uploaded\"}/>\r\n                            <button className=\"btn btn-info btn-block my-4\" onClick={this.onShow}>Re-Upload Image</button>\r\n                        </div>}\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n    handleUploadSubmit(event) {\r\n        if(this.state.titleService !==  '' && this.state.description !==  ''\r\n            && this.state.type !== 'Choose a category' && this.state.country !==  '' && this.state.region !==  '' ) {\r\n            this.handleImageUpload(this.state.uploadedFile);\r\n        }else {\r\n            alert('Error occurred: Missing user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        const { country, region } = this.state;\r\n        return (\r\n            <div className=\"mt-10 ml-10 mr-10 mb-10\">\r\n            <form className=\"text-center border border-light p-5 mt-10\" onSubmit={this.handleUploadSubmit}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">{this.afterUpload()}</div>\r\n                        <div className=\"col-md-6\">\r\n                            <p className=\"h4 mb-4\">Service Details</p>\r\n                            <input type=\"text\" id=\"defaultAdsTitle\" className=\"form-control mb-4\" placeholder=\"TITLE\" value={this.state.titleService} onChange={this.handletitleChange}/>\r\n                            <MDBDropdown>\r\n                                <MDBDropdownToggle className=\"btn btn-info btn-block my-4\" caret color=\"primary\">\r\n                                    {this.state.type}\r\n                                </MDBDropdownToggle>\r\n                                <MDBDropdownMenu basic>\r\n                                    {this.state.output}\r\n                                </MDBDropdownMenu>\r\n                                <MDBDropdown>\r\n                                    <CountryDropdown className={\"dropdown-item\"}\r\n                                                     value={country}\r\n                                                     onChange={(val) => this.selectCountry(val)} />\r\n                                    <RegionDropdown className={\"dropdown-item\"}\r\n                                                    country={country}\r\n                                                    value={region}\r\n                                                    onChange={(val) => this.selectRegion(val)} />\r\n                                </MDBDropdown>\r\n                            </MDBDropdown>\r\n                            <div className=\"md-form\">\r\n                                <label htmlFor=\"form7\">DESCRIPTION :</label>\r\n                                <br/>\r\n                                <textarea id=\"form7\" className=\"md-textarea form-control\" rows=\"8\" placeholder=\"MAX characters - 500\" value={this.state.description} onChange={this.handledescriptionChange}/>\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Upload</button>\r\n                    <label className={\"error\"}>{this.state.result}</label>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst SpinnerPage = () => {\r\n    return (\r\n        <>\r\n            <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpinnerPage;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\nclass ModalPage extends Component {\r\n    state = {\r\n        modal: false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBBtn color=\"primary\" size=\"md\" onClick={this.toggle}>Contact us</MDBBtn>\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <MDBModalHeader toggle={this.toggle}>Contact Details</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        Email: {this.props.contactEmail}\r\n                    </MDBModalBody>\r\n                    <MDBModalBody>\r\n                        Phone Number: {this.props.phoneNo}\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalPage;","import React, {Component} from \"react\";\r\nimport {\r\n    MDBView, MDBMask, MDBCard, MDBCardBody, MDBRow, MDBCol\r\n} from \"mdbreact\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\nimport ModalPage from \"./Model\";\r\nconst uuidv4 = require('uuid/v4');\r\nconst dateFormat = require('dateformat');\r\n\r\nexport class ServiceInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            link: '',\r\n            modal: false,\r\n            result: '',\r\n            ImageLink: '',\r\n            title: '',\r\n            description: '',\r\n            createDate: '',\r\n            ServiceLocation: '',\r\n            output:[],\r\n            contactName: 'default',\r\n            contactEmail:'default',\r\n            contactNo:'default',\r\n            show: false,\r\n            showContact: ''\r\n        };\r\n        this.onShow = this.onShow.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n        this.loadAllService();\r\n    }\r\n    loadingBar(){\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state= {\r\n            output: <div><label className={\"error\"}>Please wait while loading service information, Thank you!</label>\r\n                <br /><SpinnerPage /></div>\r\n        };\r\n        console.log(this.state.output);\r\n    }\r\n    onShow = ()=> {\r\n        //this.onShowDetail();\r\n        this.setState({ show: true });\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    loadAllService(){\r\n        this.loadingBar();\r\n        fetch('https://serviceinfo.azurewebsites.net/getServicesByName/'+this.props.category, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Cache-Control': 'no-cache'\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(json => {\r\n                    if (json.Success === true) {\r\n                           //console.log(json.Data);\r\n                        this.state= {\r\n                            output: []\r\n                        };\r\n                           let view = this.state.output;\r\n                           for(let i = 0; i < json.Data.length; i++)\r\n                           {\r\n                               for(let x = 0; x < json.Data[i].serviceInfo.length; x++) {\r\n                                   //console.log(json.Data[i].serviceInfo[x]);\r\n                                   this.setState({\r\n                                       contactName:json.Data[i].ContactName,\r\n                                       contactEmail:json.Data[i].ContactEmail,\r\n                                       contactNo:json.Data[i].ContactNo\r\n                                   });\r\n                                   this.setState({\r\n                                       ImageLink: json.Data[i].serviceInfo[x].ImageLink,\r\n                                       title: json.Data[i].serviceInfo[x].Name,\r\n                                       description: json.Data[i].serviceInfo[x].Description,\r\n                                       createDate: dateFormat(json.Data[i].serviceInfo[x].CreateDate, \"yyyy-mm-dd\"),\r\n                                       ServiceLocation: json.Data[i].serviceInfo[x].ServiceLocation\r\n                                   });\r\n                                   view.push(this.serviceRows());\r\n                                  // json.Data[i].serviceInfo[x].ImageLink, json.Data[i].serviceInfo[x].Name, json.Data[i].serviceInfo[x].Description, json.Data[i].serviceInfo[x].CreateDate)\r\n                               }\r\n                           }\r\n                        setTimeout(function () {\r\n                            this.onHide();\r\n                            this.setState({result: \"Success\"});\r\n                        }.bind(this), 2000);\r\n                        this.setState({\r\n                            output: view\r\n                        });\r\n                        return true\r\n                    } else {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            this.setState({output: ServiceInfo.error()});\r\n                        return false\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({output: this.uploadServiceButton()});\r\n                return false\r\n            }\r\n        }).catch(function (ex) {\r\n            alert('Error occur: ' + ex);\r\n        });\r\n    };\r\n    static error(){\r\n        return(\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                Error occurred\r\n            </div>\r\n        )\r\n    }\r\n    uploadServiceButton(){\r\n         return(\r\n             <div className=\"text-center\">\r\n                 No services submitted, be the first one !\r\n                <button className=\"btn btn-info btn-block my-4\" onClick={this.props.loadUploadService}>Place your services</button>\r\n             </div>\r\n         )\r\n     }\r\n     serviceRows(){\r\n        return(\r\n            <div key={uuidv4()}>\r\n            <MDBRow>\r\n                <MDBCol lg=\"5\" xl=\"4\">\r\n                    <MDBView hover className=\"rounded z-depth-1-half mb-lg-0 mb-4\">\r\n                        <img\r\n                            className=\"img-fluid\"\r\n                            src={this.state.ImageLink}\r\n                            alt=\"\"\r\n                        />\r\n                        <a href=\"#!\">\r\n                            <MDBMask overlay=\"white-slight\" />\r\n                        </a>\r\n                    </MDBView>\r\n                </MDBCol>\r\n                <MDBCol lg=\"7\" xl=\"8\">\r\n                    <h3 className=\"font-weight-bold mb-3 p-0\">\r\n                        <strong>{this.state.title}</strong>\r\n                    </h3>\r\n                    <p className=\"dark-grey-text\">\r\n                        {this.state.description}\r\n                    </p>\r\n                    by <a href=\"#!\" className=\"font-weight-bold\">{this.state.contactName}</a>,  {this.state.createDate}, <i\r\n                    className=\"fas fa-map-marker-alt\"> {this.state.ServiceLocation}</i>\r\n                        <ModalPage contactEmail={this.state.contactEmail} phoneNo={this.state.contactNo}/>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <hr className=\"my-5\" />\r\n            </div>\r\n        )\r\n    }\r\n    serviceAll =() =>{\r\n        return(\r\n            <div>\r\n                <div className=\"container mb-10\">\r\n                    <MDBCard className=\"my-5 px-5 pb-5\">\r\n                        <MDBCardBody className=\"text-center\">\r\n                            {this.state.output}\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.serviceAll()\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport SpinnerPage from './SpinnerPage';\r\nimport {MDBDropdown, MDBDropdownItem, MDBDropdownMenu, MDBDropdownToggle} from \"mdbreact\";\r\n\r\n\r\nexport default class signFormPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fName: '',\r\n            sName: '',\r\n            email: '',\r\n            password: '',\r\n            username: '',\r\n            phoneNo: '',\r\n            type: 'Account Type:',\r\n            isProvider: '',\r\n            show: false\r\n        };\r\n\r\n        this.handlefNameChange = this.handlefNameChange.bind(this);\r\n        this.handlesNameChange = this.handlesNameChange.bind(this);\r\n        this.handleemailChange = this.handleemailChange.bind(this);\r\n        this.handlepasswordChange = this.handlepasswordChange.bind(this);\r\n        this.handleusernameChange = this.handleusernameChange.bind(this);\r\n        this.handlePhoneChange = this.handlePhoneChange.bind(this);\r\n        this.handleTypeChange = this.handleTypeChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            window.history.forward()\r\n        }, 0);\r\n        window.onunload= null;\r\n    }\r\n    onShow = ()=> {\r\n        this.setState({ show: true })\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    loading(){\r\n        if(this.state.show){\r\n            return <SpinnerPage />\r\n        }else {\r\n\r\n        }\r\n    }\r\n    loggedin(){\r\n        this.props.checkLog(true);\r\n    }\r\n    handlefNameChange(event) {\r\n        this.setState({\r\n            fName: event.target.value\r\n        });\r\n    }\r\n    handlesNameChange(event) {\r\n        this.setState({\r\n            sName: event.target.value\r\n        });\r\n    }\r\n    handleemailChange(event) {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n    handlePhoneChange(event) {\r\n        this.setState({\r\n            phoneNo: event.target.value\r\n        });\r\n    }\r\n    handlepasswordChange(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    handleusernameChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    handleTypeChange(event) {\r\n        this.setState({\r\n            type: event.target.value\r\n        });\r\n        if(event.target.value === \"User\"){\r\n            this.setState({\r\n                isProvider: '0'\r\n            });\r\n        }else {\r\n            this.setState({\r\n                isProvider: '1'\r\n            });\r\n        }\r\n    }\r\n    handleSubmit(event) {\r\n        if(this.state.username !== ''|| this.state.password !== '' || this.state.fName !== '' || this.state.phoneNo !== ''\r\n            || this.state.sName !== '' || this.state.email !== '' || this.state.type !== 'Account Type:' ) {\r\n            this.onShow();\r\n            this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n            fetch('https://lshapi.azurewebsites.net/createNewAccount', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    UserName: this.state.username,\r\n                    Password: this.state.password,\r\n                    FirstName: this.state.fName,\r\n                    LastName: this.state.sName,\r\n                    PhoneNo: this.state.phoneNo,\r\n                    isProvider: this.state.isProvider,\r\n                    Email: this.state.email\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        if (json.Success === true) {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"Success\"});\r\n                                this.setState({\r\n                                    redirect: true\r\n                                });\r\n                            }.bind(this), 2000);\r\n                            this.props.setUsername(this.state.username);\r\n                            this.loggedin(this.state.redirect);\r\n                            return true\r\n                        } else {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"User exists or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            return false\r\n                        }\r\n                    });\r\n                }else{\r\n                    setTimeout(function () {\r\n                        this.onHide();\r\n                        this.setState({result: \"User exists or Invalid input\"})\r\n                    }.bind(this), 2000);\r\n                    return false\r\n                }\r\n            }).catch(function (ex) {\r\n                alert('Error occurred: ' + ex);\r\n            });\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10\">\r\n            <form className=\"text-center border border-light p-5\" onSubmit={this.handleSubmit}>\r\n            <p className=\"h4 mb-4\">Sign up</p>\r\n                <div className=\"form-row mb-4\">\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" id=\"defaultRegisterFormFirstName\" className=\"form-control\" placeholder=\"First name\"\r\n                               value={this.state.fName} onChange={this.handlefNameChange}/>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" id=\"defaultRegisterFormLastName\" className=\"form-control\" placeholder=\"Last name\"\r\n                               value={this.state.sName} onChange={this.handlesNameChange}/>\r\n                    </div>\r\n                </div>\r\n                <MDBDropdown>\r\n                    <MDBDropdownToggle className=\"btn btn-info btn-block my-4\" caret color=\"primary\">\r\n                        {this.state.type}\r\n                    </MDBDropdownToggle>\r\n                    <MDBDropdownMenu basic>\r\n                        <MDBDropdownItem value=\"User\" onClick={this.handleTypeChange}>User</MDBDropdownItem>\r\n                        <MDBDropdownItem value=\"Provider\" onClick={this.handleTypeChange}>Provider</MDBDropdownItem>\r\n                    </MDBDropdownMenu>\r\n                </MDBDropdown>\r\n                <input type=\"email\" id=\"defaultRegisterFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail\"\r\n                       value={this.state.email} onChange={this.handleemailChange}/>\r\n                <input type=\"phone\" id=\"defaultRegisterFormPhone\" className=\"form-control mb-4\" placeholder=\"Phone Number\"\r\n                       value={this.state.phoneNo} onChange={this.handlePhoneChange}/>\r\n                <input type=\"username\" id=\"defaultRegisterFormUsername\" className=\"form-control mb-4\" placeholder=\"Username\"\r\n                       value={this.state.username} onChange={this.handleusernameChange}/>\r\n                <input type=\"password\" id=\"defaultRegisterFormPassword\" className=\"form-control\" placeholder=\"Password\"\r\n                       aria-describedby=\"defaultRegisterFormPasswordHelpBlock\" value={this.state.password} onChange={this.handlepasswordChange}/>\r\n                <small id=\"defaultRegisterFormPasswordHelpBlock\" className=\"form-text text-muted mb-4\">\r\n                    At least 8 characters and 1 digit\r\n                </small>\r\n        <button className=\"btn btn-info my-4 btn-block\" type=\"submit\">Sign up</button>\r\n                <label className={\"error\"}>{this.state.result}</label>\r\n                <br />\r\n                {this.loading()}\r\n        <hr/>\r\n        <p>By clicking <u><em>Sign up</em></u> you agree to our <a href=\"/\" target=\"_blank\">terms of service</a></p>\r\n    </form>\r\n    </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nexport default class LoginFormPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            username: '',\r\n            isProvider: '',\r\n            loginshow: false\r\n        };\r\n\r\n        this.handlepasswordLoginChange = this.handlepasswordLoginChange.bind(this);\r\n        this.handleusernameLoginChange = this.handleusernameLoginChange.bind(this);\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            window.history.forward()\r\n        }, 0);\r\n        window.onunload= null;\r\n    }\r\n    loggedin(){\r\n        this.props.checkLog(true);\r\n    }\r\n    onLoginShow = ()=> {\r\n        this.setState({ loginshow: true })\r\n    };\r\n    onLoginHide = ()=> {\r\n        this.setState({ loginshow: false })\r\n    };\r\n    loginloading(){\r\n        if(this.state.loginshow){\r\n            return <SpinnerPage />\r\n        }\r\n    }\r\n    handlepasswordLoginChange(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    handleusernameLoginChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    handleLoginSubmit(event) {\r\n        if(this.state.username !== ''|| this.state.password !== '' ) {\r\n            this.onLoginShow();\r\n            this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n            fetch('https://lshapi.azurewebsites.net/accountValidation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    UserName: this.state.username,\r\n                    Password: this.state.password\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        if (json.Success === true) {\r\n                            setTimeout(function () {\r\n                                this.onLoginHide();\r\n                                this.setState({result: \"Success\"});\r\n                                this.setState({\r\n                                    redirect: true\r\n                                });\r\n                            }.bind(this), 2000);\r\n                            console.log(\"redirect \"+ this.state.redirect);\r\n                            this.props.setUsername(this.state.username);\r\n                            this.props.setProvider(json.Data.split(\":\")[1]);\r\n                            this.loggedin(this.state.redirect);\r\n                            return true;\r\n                        } else {\r\n                            setTimeout(function () {\r\n                                this.onLoginHide();\r\n                                this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            return false\r\n                        }\r\n                    });\r\n                }else{\r\n                    setTimeout(function () {\r\n                        this.onLoginHide();\r\n                        this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                    }.bind(this), 2000);\r\n                    return false\r\n                }\r\n            }).catch(function (ex) {\r\n                alert('Error occurred: ' + ex);\r\n            });\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10\">\r\n                <form className=\"text-center border border-light p-5 mt-10\" onSubmit={this.handleLoginSubmit}>\r\n                    <p className=\"h4 mb-4\">Sign in</p>\r\n                    <input type=\"text\" id=\"defaultLoginFormEmail\" className=\"form-control mb-4\" placeholder=\"Username\" value={this.state.username} onChange={this.handleusernameLoginChange}/>\r\n                    <input type=\"password\" id=\"defaultLoginFormPassword\" className=\"form-control mb-4\"\r\n                           placeholder=\"Password\" value={this.state.password} onChange={this.handlepasswordLoginChange}/>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <div>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultLoginFormRemember\"/>\r\n                                <label className=\"custom-control-label\" htmlFor=\"defaultLoginFormRemember\">Remember me</label>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"/\">Forgot password?</a>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Sign in</button>\r\n                    <p>Not a member?<a href=\"/webapp/signup\">Register</a></p>\r\n                    <label className={\"error\"}>{this.state.result}</label>\r\n                    <br />\r\n                    {this.loginloading()}\r\n                    <hr/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {MDBListGroup, MDBListGroupItem, MDBContainer, MDBRow, MDBCol, MDBView, MDBMask} from \"mdbreact\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport class CategoryList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            linkName: '',\r\n            previousName: '',\r\n            output: [],\r\n            checkService: false,\r\n            result: '',\r\n            show: false,\r\n            listName: ''\r\n        };\r\n        this.onShow = this.onShow.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n        this.loadingBar = this.loadingBar.bind(this);\r\n        this.loadAllCategory();\r\n    }\r\n    loadingBar(){\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state= {\r\n            output: <div className={\"text-center\"}><label className={\"error\"}>Please wait while loading service information, Thank you!</label>\r\n                <br /><SpinnerPage /></div>\r\n        };\r\n        console.log(this.state.output);\r\n    }\r\n    onShow = ()=> {\r\n        //this.onShowDetail();\r\n        this.setState({ show: true });\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    error(){\r\n        return(\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                Error occurred\r\n            </div>\r\n        )\r\n    }\r\n    loadAllCategory(){\r\n        this.loadingBar();\r\n        fetch('https://serviceinfo.azurewebsites.net/getAllCategories', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Cache-Control': 'no-cache'\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(json => {\r\n                    if (json.Success === true) {\r\n                        //console.log(json.Data);\r\n                        this.state= {\r\n                            output: []\r\n                        };\r\n                        let view = this.state.output;\r\n                        const  test = [];\r\n                       json.Data.map(function (name) {\r\n                            test.push(name);\r\n                            return name;\r\n                        });\r\n                       for(let i = 0; i < test.length; i++)\r\n                        {\r\n                                this.setState({\r\n                                    listName:test[i]\r\n                                });\r\n                                view.push(this.categoryRows(test[i]));\r\n                        }\r\n                        setTimeout(function () {\r\n                            this.setState({result: \"Success\"});\r\n                        }.bind(this), 2000);\r\n                        this.setState({\r\n                            output: view\r\n                        });\r\n                        return true\r\n                    } else {\r\n                        setTimeout(function () {\r\n                            this.onHide();\r\n                            this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                        }.bind(this), 2000);\r\n                        this.setState({output: this.error()});\r\n                        return false\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({output: this.uploadServiceButton()});\r\n                return false\r\n            }\r\n        }).catch(function (ex) {\r\n            alert('Error occur: ' + ex);\r\n        });\r\n    };\r\n    categoryRows(name){\r\n        return(\r\n            <div key={uuidv4()} className=\"list-group-item\">\r\n                <MDBListGroupItem data-toggle=\"modal\" onClick={() => this.props.loadPage(name)}><a><p className=\"mb-0\">\r\n                    <i className=\"fa fa-arrow-right fa-2x mr-4 red p-3 white-text rounded \" aria-hidden=\"true\"/>{this.state.listName}</p></a></MDBListGroupItem>\r\n            </div>\r\n        )\r\n    }\r\n    CategoryList = () => {\r\n     return (\r\n        <Fragment>\r\n            <MDBContainer>\r\n                <MDBListGroup>\r\n                    <div className=\"list-group-flush ml-10 mr-10\">\r\n                        {this.state.output}\r\n                    </div>\r\n                </MDBListGroup>\r\n            </MDBContainer>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n    render() {\r\n            return (\r\n                this.CategoryList()\r\n            );\r\n    }\r\n}","import React, { Fragment, Component } from 'react';\r\nimport { Button } from \"mdbreact\";\r\nimport NavbarPage from './components/Header';\r\nimport NavbarPageLog from './components/HeaderLogged';\r\nimport ServiceCard from './components/ServiceCard';\r\nimport SearchPage from './components/SearchBar';\r\nimport FooterPage from './components/FooterPage';\r\nimport Uploader from \"./components/IUploader\";\r\nimport {ServiceInfo} from \"./components/ServiceInfo\";\r\nimport SignFormPage from \"./components/signUpForm\";\r\nimport LoginFormPage from \"./components/loginForm\";\r\nimport {CategoryList} from \"./components/CategoryList\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            NavBarChange: \"\",\r\n            default: true,\r\n            loadPageName: '',\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: false,\r\n            username:\"\",\r\n            provider:\"\"\r\n        };\r\n        this.checkLogout =  this.checkLogout.bind(this);\r\n        this.checkLog = this.checkLog.bind(this);\r\n        this.loadHeader = this.loadHeader.bind(this);\r\n        this.loadHome = this.loadHome.bind(this);\r\n        this.loadUploadService = this.loadUploadService.bind(this);\r\n        this.loadPage = this.loadPage.bind(this);\r\n        this.loadLogin = this.loadLogin.bind(this);\r\n        this.loadSignUp = this.loadSignUp.bind(this);\r\n        this.loadCategoryListPage = this.loadCategoryListPage.bind(this);\r\n        this.setUsername = this.setUsername.bind(this);\r\n        this.setProvider = this.setProvider.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadHeader();\r\n    }\r\n    loadHome(){\r\n        this.setState({\r\n            Home: true,\r\n            loadPageName: '',\r\n            default: false,\r\n            UploadService: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadUploadService(){\r\n        this.setState({\r\n            default: false,\r\n            loadPageName: '',\r\n            Home: false,\r\n            UploadService: true,\r\n            Login: false,\r\n            SignUp: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadLogin(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Login: true,\r\n            SignUp: false,\r\n            loadPageName: '',\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadSignUp(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Login: false,\r\n            SignUp: true,\r\n            loadPageName: '',\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadPage(name){\r\n        this.setState({\r\n            loadPageName: name,\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadCategoryListPage(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            loadPageName: '',\r\n            Login: false,\r\n            SignUp: false,\r\n            CategoryListPage: true\r\n        });\r\n    }\r\n    setUsername(name){\r\n        this.setState({\r\n            username: name\r\n        });\r\n    }\r\n    setProvider(name){\r\n        this.setState({\r\n            provider: name\r\n        });\r\n    }\r\n    checkLogout(){\r\n        console.log(\" log out: \"+this.state.isLogged );\r\n        this.setState({\r\n            isLogged: false\r\n        });\r\n        console.log(\" log out: \"+this.state.isLogged );\r\n        if(this.state.isLogged === false) {\r\n            console.log(\"loaded log out + false\");\r\n            this.loadHeader();\r\n            this.loadHome();\r\n        }\r\n    }\r\n    checkLog(){\r\n        if(this.state.isLogged === false)\r\n        this.setState({\r\n            isLogged: true\r\n        });\r\n        if(this.state.isLogged === true && this.state.username !== \"\"){\r\n            console.log(\"loaded login + true\");\r\n            this.loadHeader();\r\n            this.loadHome();\r\n        }\r\n    }\r\n    loadHeader(){\r\n        if(this.state.isLogged !== true){\r\n            this.setState({\r\n                NavBarChange: <NavbarPage\r\n                    username={this.state.username}\r\n                    loadHome={this.loadHome}\r\n                    loadUploadService={this.loadUploadService}\r\n                    loadLogin={this.loadLogin}\r\n                    loadSignUp={this.loadSignUp}\r\n                    loadCategoryListPage={this.loadCategoryListPage}/>\r\n            });\r\n        }else{\r\n            this.setState({\r\n                NavBarChange: <NavbarPageLog\r\n                    username={this.state.username}\r\n                    checkLogout ={this.checkLogout}\r\n                    loadHome={this.loadHome}\r\n                    loadUploadService={this.loadUploadService}\r\n                    loadLogin={this.loadLogin}\r\n                    loadSignUp={this.loadSignUp}\r\n                    loadCategoryListPage={this.loadCategoryListPage}/>\r\n            });\r\n        }\r\n    }\r\n\r\n    Home = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <div className=\"container mb-10\">\r\n                <ServiceCard loadPage={this.loadPage}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    UploadService = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container mb-10\">\r\n                <Uploader username={this.state.username} isProvider={this.state.provider}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    Login = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container\">\r\n                <LoginFormPage checkLog ={this.checkLog} setUsername={this.setUsername} setProvider={this.setProvider} />\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    SignUp = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container\">\r\n                <SignFormPage checkLog ={this.checkLog} setUsername={this.setUsername}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    CategoryListPage = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container mb-10\">\r\n                <CategoryList  loadPage={this.loadPage}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    servicePage = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <ServiceInfo category={this.state.loadPageName}/>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n\r\n\r\n    render() {\r\n        if(this.state.default)\r\n        {\r\n            return (\r\n                this.Home()\r\n            );\r\n        } else if(this.state.Home)\r\n        {\r\n            return (\r\n                this.Home()\r\n            );\r\n        }else if(this.state.UploadService === true)\r\n        {\r\n            if(this.state.isLogged === true){\r\n                if(this.state.provider === '1'){\r\n                    return (\r\n                        this.UploadService()\r\n                    );\r\n                }else {\r\n                    return (\r\n                        <Fragment>\r\n                            {this.state.NavBarChange}\r\n                            <div className=\"container mb-10 center-block\">\r\n                                <h3 className={\"text-center mt-10\"}>Please login with provider account to upload your service!</h3>\r\n                            </div>\r\n                            <FooterPage/>\r\n                        </Fragment>\r\n                    );\r\n                }\r\n\r\n            }else{\r\n                return (\r\n                    <Fragment>\r\n                        {this.state.NavBarChange}\r\n                        <div className=\"container mb-10 center-block\">\r\n                            <h3 className={\"text-center mt-10\"}>Please login first before upload your services!</h3>\r\n                            <Button className={\"btn btn-info btn-block my-4\"} onClick={this.loadLogin}>Login</Button>\r\n                        </div>\r\n                        <FooterPage/>\r\n                    </Fragment>\r\n                )\r\n            }\r\n\r\n        }else if(this.state.Login)\r\n        {\r\n            return (\r\n                this.Login()\r\n            );\r\n        }else if(this.state.SignUp)\r\n        {\r\n            return (\r\n                this.SignUp()\r\n            );\r\n        }else if(this.state.loadPageName !== '')\r\n        {\r\n            return (\r\n                this.servicePage()\r\n            );\r\n        }else if(this.state.CategoryListPage)\r\n        {\r\n            return (\r\n                this.CategoryListPage()\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                window.location.reload();\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'react-drop-zone/dist/styles.css'\r\nimport './App.css'\r\nimport App from './App';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Router basename=\"/webapp\">\r\n        <div>\r\n            <Route exact path=\"/\" component={App}/>\r\n        </div>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n//serviceWorker.unregister();\r\n//unregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/courses.675581ad.png\";","module.exports = __webpack_public_path__ + \"static/media/tutor.0badb2e7.png\";","module.exports = __webpack_public_path__ + \"static/media/repair.bacd0415.png\";","module.exports = __webpack_public_path__ + \"static/media/travel.6e85a04b.png\";","module.exports = __webpack_public_path__ + \"static/media/wellness.7e54d25b.png\";","module.exports = __webpack_public_path__ + \"static/media/electrician.614ea8f3.png\";"],"sourceRoot":""}
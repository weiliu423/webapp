{"version":3,"sources":["components/Header.js","components/ServiceCard.js","components/SearchBar.js","components/FooterPage.js","App.js","components/SpinnerPage.js","components/loginForm.js","Login.js","components/signUpForm.js","SignUp.js","serviceWorker.js","index.js","img/repair.png","img/courses.png","img/tutor.png","img/travel.png","img/wellness.png","img/electrician.png"],"names":["NavbarPage","state","isOpen","collapsed","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","onClick","this","id","navbar","left","active","to","nav","caret","right","href","icon","Component","ServiceCard","react","Card","CardImg","top","width","height","src","course","alt","CardBody","CardTitle","Button","size","tutor","repair","travel","wellness","electrician","SearchPage","md","type","placeholder","aria-label","gradient","rounded","FooterPage","fluid","Date","getFullYear","App","Header","SearchBar","components_ServiceCard","components_FooterPage","SpinnerPage","Fragment","role","LoginFormPage","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onLoginShow","loginshow","onLoginHide","password","username","handlepasswordLoginChange","bind","assertThisInitialized","handleusernameLoginChange","handleLoginSubmit","setTimeout","window","history","forward","onunload","components_SpinnerPage","event","target","value","_this2","result","fetch","method","headers","Accept","Content-Type","body","JSON","stringify","UserName","Password","then","response","ok","json","Success","redirect","catch","ex","alert","preventDefault","onSubmit","onChange","htmlFor","loginloading","React","Login","_Component","apply","arguments","inherits","createClass","key","loginForm_LoginFormPage","signFormPage","onShow","show","onHide","fName","sName","email","handlefNameChange","handlesNameChange","handleemailChange","handlepasswordChange","handleusernameChange","handleSubmit","FirstName","LastName","Email","aria-describedby","loading","SignUp","signUpForm_signFormPage","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","error","ReactDOM","render","BrowserRouter","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","concat","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.5ebb7eb6.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\n    MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\n\r\nclass NavbarPage extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        collapsed: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MDBNavbar color=\"blue\" dark expand=\"md\">\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">LSH</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem active>\r\n                            <MDBNavLink to=\"/\">Home</MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"#!\">Place your services</MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                <MDBDropdownToggle nav caret>\r\n                                    <div className=\"d-none d-md-inline\">Services</div>\r\n                                </MDBDropdownToggle>\r\n                                <MDBDropdownMenu className=\"dropdown-default\" right>\r\n                                    <MDBDropdownItem href=\"#!\">Courses</MDBDropdownItem>\r\n                                    <MDBDropdownItem href=\"#!\">Tutors</MDBDropdownItem>\r\n                                    <MDBDropdownItem href=\"#!\">Repairs</MDBDropdownItem>\r\n                                    <MDBDropdownItem href=\"#!\">Electrician</MDBDropdownItem>\r\n                                </MDBDropdownMenu>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                            <MDBNavLink to=\"#!\">Download App</MDBNavLink>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                <MDBDropdownToggle nav caret>\r\n                                    <MDBIcon icon=\"user\" />\r\n                                </MDBDropdownToggle>\r\n                                <MDBDropdownMenu className=\"dropdown-default\" right>\r\n                                    <MDBDropdownItem href=\"/login\">Login</MDBDropdownItem>\r\n                                    <MDBDropdownItem href=\"/signup\">Sign up</MDBDropdownItem>\r\n                                </MDBDropdownMenu>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPage;","import React, { Fragment } from 'react';\r\nimport course from '../img/courses.png'\r\nimport tutor from '../img/tutor.png'\r\nimport repair from '../img/repair.png'\r\nimport travel from '../img/travel.png'\r\nimport wellness from '../img/wellness.png'\r\nimport electrician from '../img/electrician.png'\r\n\r\n\r\nimport {\r\n    Button, UncontrolledAlert, Card, CardImg, CardBody,\r\n    CardTitle, CardSubtitle, CardText\r\n} from 'reactstrap';\r\n\r\n\r\n/*error message handly in future/*<UncontrolledAlert color=\"danger\" className=\"d-none d-lg-block\">\r\n            <strong>Account not activated.</strong>\r\n        </UncontrolledAlert>*/\r\nconst services = () => {\r\n    return (\r\n        <Fragment>\r\n            <Card>\r\n                <CardImg top width=\"100%\" src={repair} alt=\"banner\"/>\r\n                <CardBody>\r\n                    <CardTitle className=\"h6 mb-2s text-secondary\">Course</CardTitle>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Service</Button>\r\n                    </div>\r\n                </CardBody>\r\n            </Card>\r\n        </Fragment>);\r\n};\r\n\r\nconst ServiceCard = () => (\r\n    <div >\r\n    <div className=\"row\">\r\n        <div className=\"col-sm mt-2\">\r\n            <Fragment>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" height=\"200\" src={course} alt=\"banner\" />\r\n                    <CardBody>\r\n                        <CardTitle className=\"h4-responsive mb-2s text-secondary\">Courses</CardTitle>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </Fragment>\r\n        </div>\r\n        <div className=\"col-sm mt-2\">\r\n            <Fragment>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" height=\"200\" src={tutor} alt=\"banner\" />\r\n                    <CardBody>\r\n                        <CardTitle className=\"h4-responsive mb-2s text-secondary\">Tutors</CardTitle>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </Fragment>\r\n        </div>\r\n        <div className=\"col-sm mt-2\">\r\n            <Fragment>\r\n                <Card>\r\n                    <CardImg top width=\"100%\" height=\"200\" src={repair} alt=\"banner\" />\r\n                    <CardBody>\r\n                        <CardTitle className=\"h4-responsive mb-2s text-secondary\">Repairs</CardTitle>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                        </div>\r\n                    </CardBody>\r\n                </Card>\r\n            </Fragment>\r\n        </div>\r\n    </div>\r\n        <div className=\"row mt-3\">\r\n            <div className=\"col-sm mt-2\">\r\n                <Fragment>\r\n                    <Card>\r\n                        <CardImg top width=\"100%\" height=\"200\" src={travel} alt=\"banner\" />\r\n                        <CardBody>\r\n                            <CardTitle className=\"h4-responsive mb-2s text-secondary\">Travel</CardTitle>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Fragment>\r\n            </div>\r\n            <div className=\"col-sm mt-2\">\r\n                <Fragment>\r\n                    <Card>\r\n                        <CardImg top width=\"100%\" height=\"200\" src={wellness} alt=\"banner\" />\r\n                        <CardBody>\r\n                            <CardTitle className=\"h4-responsive mb-2s text-secondary\">Wellness</CardTitle>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Fragment>\r\n            </div>\r\n            <div className=\"col-sm mt-2\">\r\n                <Fragment>\r\n                    <Card>\r\n                        <CardImg top width=\"100%\" height=\"200\" src={electrician} alt=\"banner\" />\r\n                        <CardBody>\r\n                            <CardTitle className=\"h4-responsive mb-2s text-secondary\">Electrician</CardTitle>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                            </div>\r\n                        </CardBody>\r\n                    </Card>\r\n                </Fragment>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default ServiceCard;","import React from \"react\";\r\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\r\n\r\nconst SearchPage = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n        <MDBCol md=\"2.5\">\r\n            <MDBFormInline className=\"md-form\">\r\n                <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n                    Search\r\n                </MDBBtn>\r\n            </MDBFormInline>\r\n        </MDBCol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;","import React from \"react\";\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPage = () => {\r\n    return (\r\n        <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4 fixed-bottom\">\r\n            <div className=\"text-center py-1\">\r\n                <MDBContainer fluid>\r\n                    &copy; {new Date().getFullYear()} Copyright: <a href=\"https://weiliu423.github.io\"> Wei Liu </a>\r\n                </MDBContainer>\r\n            </div>\r\n        </MDBFooter>\r\n    );\r\n};\r\n\r\nexport default FooterPage;","import React, { Fragment, Component } from 'react';\r\n\r\nimport NavbarPage from './components/Header';\r\nimport ServiceCard from './components/ServiceCard';\r\nimport SearchPage from './components/SearchBar';\r\nimport FooterPage from './components/FooterPage';\r\n\r\nexport default class App extends Component {\r\n    App = () => (\r\n        <Fragment>\r\n            <NavbarPage />\r\n            <SearchPage />\r\n            <div className=\"container mb-10\">\r\n                <ServiceCard/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    render() {\r\n        return (\r\n            this.App()\r\n        );\r\n    }\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nconst SpinnerPage = () => {\r\n    return (\r\n        <>\r\n            <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpinnerPage;","import React from \"react\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\n\r\nexport default class LoginFormPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            username: '',\r\n            loginshow: false\r\n        };\r\n\r\n        this.handlepasswordLoginChange = this.handlepasswordLoginChange.bind(this);\r\n        this.handleusernameLoginChange = this.handleusernameLoginChange.bind(this);\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            window.history.forward()\r\n        }, 0);\r\n        window.onunload= null;\r\n    }\r\n    onLoginShow = ()=> {\r\n        this.setState({ loginshow: true })\r\n    };\r\n    onLoginHide = ()=> {\r\n        this.setState({ loginshow: false })\r\n    };\r\n    loginloading(){\r\n        if(this.state.loginshow){\r\n            return <SpinnerPage />\r\n        }\r\n    }\r\n    handlepasswordLoginChange(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    handleusernameLoginChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    handleLoginSubmit(event) {\r\n        if(this.state.username !== ''|| this.state.password !== '' ) {\r\n            this.onLoginShow();\r\n            this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n            fetch('https://lshapi.azurewebsites.net/accountValidation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    UserName: this.state.username,\r\n                    Password: this.state.password\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        if (json.Success === true) {\r\n                            setTimeout(function () {\r\n                                this.onLoginHide();\r\n                                this.setState({result: \"Success\"});\r\n                                this.setState({\r\n                                    redirect: true\r\n                                });\r\n                            }.bind(this), 2000);\r\n                            return true\r\n                        } else {\r\n                            setTimeout(function () {\r\n                                this.onLoginHide();\r\n                                this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            return false\r\n                        }\r\n                    });\r\n                }else{\r\n                    setTimeout(function () {\r\n                        this.onLoginHide();\r\n                        this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                    }.bind(this), 2000);\r\n                    return false\r\n                }\r\n            }).catch(function (ex) {\r\n                alert('Error occurred: ' + ex);\r\n            });\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10\">\r\n                <form className=\"text-center border border-light p-5 mt-10\" onSubmit={this.handleLoginSubmit}>\r\n                    <p className=\"h4 mb-4\">Sign in</p>\r\n                    <input type=\"text\" id=\"defaultLoginFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail/Username\" value={this.state.username} onChange={this.handleusernameLoginChange}/>\r\n                    <input type=\"password\" id=\"defaultLoginFormPassword\" className=\"form-control mb-4\"\r\n                           placeholder=\"Password\" value={this.state.password} onChange={this.handlepasswordLoginChange}/>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <div>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultLoginFormRemember\"/>\r\n                                <label className=\"custom-control-label\" htmlFor=\"defaultLoginFormRemember\">Remember me</label>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"\">Forgot password?</a>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Sign in</button>\r\n                    <p>Not a member?<a href=\"\">Register</a></p>\r\n                    <label className={\"error\"}>{this.state.result}</label>\r\n                    <br />\r\n                    {this.loginloading()}\r\n                    <hr/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, { Fragment, Component } from 'react';\r\nimport NavbarPage from './components/Header';\r\nimport LoginFormPage from './components/loginForm';\r\nimport FooterPage from './components/FooterPage';\r\n\r\nexport class Login  extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <NavbarPage />\r\n                <div className=\"container\">\r\n                    <LoginFormPage />\r\n                </div>\r\n                <FooterPage/>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n","import React from \"react\";\r\nimport { MDBContainer, MDBRow, MDBCol, MDBInput, MDBBtn } from 'mdbreact';\r\nimport SpinnerPage from './SpinnerPage';\r\n\r\nexport default class signFormPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fName: '',\r\n            sName: '',\r\n            email: '',\r\n            password: '',\r\n            username: '',\r\n            show: false\r\n        };\r\n\r\n        this.handlefNameChange = this.handlefNameChange.bind(this);\r\n        this.handlesNameChange = this.handlesNameChange.bind(this);\r\n        this.handleemailChange = this.handleemailChange.bind(this);\r\n        this.handlepasswordChange = this.handlepasswordChange.bind(this);\r\n        this.handleusernameChange = this.handleusernameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            window.history.forward()\r\n        }, 0);\r\n        window.onunload= null;\r\n    }\r\n    onShow = ()=> {\r\n        this.setState({ show: true })\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    loading(){\r\n        if(this.state.show){\r\n            return <SpinnerPage />\r\n        }else {\r\n\r\n        }\r\n    }\r\n\r\n    handlefNameChange(event) {\r\n        this.setState({\r\n            fName: event.target.value\r\n        });\r\n    }\r\n    handlesNameChange(event) {\r\n        this.setState({\r\n            sName: event.target.value\r\n        });\r\n    }\r\n    handleemailChange(event) {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n    handlepasswordChange(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    handleusernameChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    handleSubmit(event) {\r\n        if(this.state.username !== ''|| this.state.password !== '' || this.state.fName !== '' || this.state.sName !== '' || this.state.email !== '') {\r\n            this.onShow();\r\n            this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n            fetch('https://lshapi.azurewebsites.net/createNewAccount', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    UserName: this.state.username,\r\n                    Password: this.state.password,\r\n                    FirstName: this.state.fName,\r\n                    LastName: this.state.sName,\r\n                    Email: this.state.email\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        if (json.Success === true) {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"Success\"});\r\n                                this.setState({\r\n                                    redirect: true\r\n                                });\r\n                            }.bind(this), 2000);\r\n                            return true\r\n                        } else {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"User exists or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            return false\r\n                        }\r\n                    });\r\n                }else{\r\n                    setTimeout(function () {\r\n                        this.onHide();\r\n                        this.setState({result: \"User exists or Invalid input\"})\r\n                    }.bind(this), 2000);\r\n                    return false\r\n                }\r\n            }).catch(function (ex) {\r\n                alert('Error occurred: ' + ex);\r\n            });\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10\">\r\n            <form className=\"text-center border border-light p-5\" onSubmit={this.handleSubmit}>\r\n            <p className=\"h4 mb-4\">Sign up</p>\r\n        <div className=\"form-row mb-4\">\r\n            <div className=\"col\">\r\n                <input type=\"text\" id=\"defaultRegisterFormFirstName\" className=\"form-control\" placeholder=\"First name\" value={this.state.fName} onChange={this.handlefNameChange}/>\r\n            </div>\r\n            <div className=\"col\">\r\n                <input type=\"text\" id=\"defaultRegisterFormLastName\" className=\"form-control\" placeholder=\"Last name\" value={this.state.sName} onChange={this.handlesNameChange}/>\r\n            </div>\r\n        </div>\r\n        <input type=\"email\" id=\"defaultRegisterFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail\" value={this.state.email} onChange={this.handleemailChange}/>\r\n                <input type=\"username\" id=\"defaultRegisterFormUsername\" className=\"form-control mb-4\" placeholder=\"Username\" value={this.state.username} onChange={this.handleusernameChange}/>\r\n        <input type=\"password\" id=\"defaultRegisterFormPassword\" className=\"form-control\" placeholder=\"Password\"\r\n               aria-describedby=\"defaultRegisterFormPasswordHelpBlock\" value={this.state.password} onChange={this.handlepasswordChange}/>\r\n        <small id=\"defaultRegisterFormPasswordHelpBlock\" className=\"form-text text-muted mb-4\">\r\n            At least 8 characters and 1 digit\r\n        </small>\r\n        <button className=\"btn btn-info my-4 btn-block\" type=\"submit\">Sign in</button>\r\n                <label className={\"error\"}>{this.state.result}</label>\r\n                <br />\r\n                {this.loading()}\r\n        <hr/>\r\n        <p>By clicking <u><em>Sign up</em></u> you agree to our <a href=\"\" target=\"_blank\">terms of service</a>\r\n    </p>\r\n    </form>\r\n    </div>\r\n        );\r\n    }\r\n}","import React, { Fragment, Component } from 'react';\r\nimport NavbarPage from './components/Header';\r\nimport SignFormPage from './components/signUpForm';\r\nimport FooterPage from './components/FooterPage';\r\n\r\nexport class SignUp extends Component {\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <NavbarPage />\r\n                <div className=\"container\">\r\n                    <SignFormPage />\r\n                </div>\r\n                <FooterPage/>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport {Login} from './Login';\r\nimport {SignUp} from './SignUp';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n} from 'react-router-dom';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport './App.css'\r\n\r\nReactDOM.render(\r\n    <Router>\r\n        <div>\r\n            <Route exact path=\"/webapp/\" component={App}/>\r\n            <Route exact path=\"/webapp/login\" component={Login}/>\r\n            <Route exact path=\"/webapp/signup\" component={SignUp}/>\r\n        </div>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","module.exports = __webpack_public_path__ + \"static/media/repair.bacd0415.png\";","module.exports = __webpack_public_path__ + \"static/media/courses.675581ad.png\";","module.exports = __webpack_public_path__ + \"static/media/tutor.0badb2e7.png\";","module.exports = __webpack_public_path__ + \"static/media/travel.6e85a04b.png\";","module.exports = __webpack_public_path__ + \"static/media/wellness.7e54d25b.png\";","module.exports = __webpack_public_path__ + \"static/media/electrician.614ea8f3.png\";"],"sourceRoot":""}
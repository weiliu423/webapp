{"version":3,"sources":["components/Header.js","components/HeaderLogged.js","components/ServiceCard.js","components/SearchBar.js","components/FooterPage.js","components/IUploader.js","components/SpinnerPage.js","components/Model.js","components/ServiceInfo.js","components/signUpForm.js","components/loginForm.js","components/CategoryList.js","App.js","serviceWorker.js","index.js","img/courses.png","img/tutor.png","img/repair.png","img/travel.png","img/wellness.png","img/electrician.png"],"names":["NavbarPage","state","isOpen","collapsed","clicked","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","onClick","this","id","navbar","left","active","type","props","loadHome","loadUploadService","loadCategoryListPage","right","loadLogin","loadSignUp","Component","NavbarPageLog","username","checkLogout","ServiceCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","show","_this2","react","Card","CardImg","top","width","height","src","course","alt","CardBody","CardTitle","Button","data-toggle","loadPage","size","tutor","repair","travel","wellness","electrician","SearchPage","md","placeholder","aria-label","gradient","rounded","FooterPage","fluid","Date","getFullYear","href","Uploader","require","onShow","onHide","uploadedFile","uploadedFileCloudinaryUrl","result","titleService","description","email","phone","submitted","output","country","region","handletitleChange","bind","assertThisInitialized","handledescriptionChange","handleUploadSubmit","handleTypeChange","loadAllCategory","val","files","ext","name","substr","lastIndexOf","console","log","reader","FileReader","file","onloadend","imagePreviewUrl","readAsDataURL","alert","event","target","value","length","_this3","fetch","method","headers","Accept","Content-Type","Access-Control-Allow-Origin","Cache-Control","then","response","ok","json","Success","view","test","Data","map","push","i","categoryRows","catch","ex","_this4","request","post","field","end","err","error","body","secure_url","JSON","stringify","Name","TypeName","LinkAccountId","Description","ImageLink","AccountName","ServiceLocation","setTimeout","_this5","dist","onDrop","onImageDrop","_ref","over","overDocument","handleImageUpload","preventDefault","_this6","_this$state","onSubmit","afterUpload","onChange","caret","basic","rcrs_es","selectCountry","selectRegion","htmlFor","rows","SpinnerPage","Fragment","role","ModalPage","modal","toggle","contactEmail","phoneNo","uuidv4","dateFormat","ServiceInfo","_Component","serviceAll","link","title","createDate","contactName","contactNo","showContact","loadAllService","inherits","createClass","key","components_SpinnerPage","loadingBar","category","uploadServiceButton","x","serviceInfo","ContactName","ContactEmail","ContactNo","CreateDate","serviceRows","lg","xl","hover","overlay","Model","signFormPage","fName","sName","password","handlefNameChange","handlesNameChange","handleemailChange","handlepasswordChange","handleusernameChange","handleSubmit","window","history","forward","onunload","checkLog","UserName","Password","FirstName","LastName","Email","redirect","setUsername","loggedin","aria-describedby","loading","React","LoginFormPage","onLoginShow","loginshow","onLoginHide","handlepasswordLoginChange","handleusernameLoginChange","handleLoginSubmit","loginloading","CategoryList","linkName","previousName","checkService","listName","aria-hidden","App","Home","NavBarChange","SearchBar","ServiceCard_ServiceCard","components_FooterPage","UploadService","IUploader_Uploader","Login","loginForm_LoginFormPage","SignUp","signUpForm_signFormPage","CategoryListPage","CategoryList_CategoryList","servicePage","ServiceInfo_ServiceInfo","loadPageName","isLogged","default","Tutor","CoursePage","Repairs","loadHeader","Header","HeaderLogged","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reload","ReactDOM","render","BrowserRouter","basename","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","concat","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.d6bdf4fb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBDropdown} from \"mdbreact\";\r\n\r\nclass NavbarPage extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        collapsed: false,\r\n        clicked: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n    render() {\r\n        return (\r\n            <MDBNavbar color=\"blue\" dark expand=\"md\">\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">LSH</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem active>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn \" onClick={this.props.loadHome}>Home</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadUploadService}>Place your services</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadCategoryListPage}>Services</button>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadLogin}>Download APP!</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                    <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadLogin}>Login</button>\r\n                                     |\r\n                                    <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadSignUp}>Sign up</button>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPage;","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavbarToggler, MDBCollapse, MDBDropdown} from \"mdbreact\";\r\n\r\nclass NavbarPageLog extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        collapsed: false,\r\n        clicked: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MDBNavbar color=\"blue\" dark expand=\"md\">\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">LSH</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem active>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadHome}>Home</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadUploadService}>Place your services</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadCategoryListPage}>Services</button>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                            <p className=\"navBtn nameText\">Hi {this.props.username} |</p>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadLogin}>Download APP!</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.checkLogout}>Log out</button>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPageLog;","import React, {Component, Fragment} from 'react';\r\nimport course from '../img/courses.png'\r\nimport tutor from '../img/tutor.png'\r\nimport repair from '../img/repair.png'\r\nimport travel from '../img/travel.png'\r\nimport wellness from '../img/wellness.png'\r\nimport electrician from '../img/electrician.png'\r\n\r\n\r\nimport {\r\n    Button, Card, CardImg, CardBody,\r\n    CardTitle\r\n} from 'reactstrap';\r\nimport {MDBListGroupItem} from \"mdbreact\";\r\n\r\n\r\nexport default class ServiceCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n            <div className=\"row\">\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={course} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Courses</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Courses\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={tutor} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Tutors</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Tutors\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={repair} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Repairs</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Repairs\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={travel} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Travel</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Travel\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={wellness} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Wellness</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Wellness\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={electrician} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Electrician</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button data-toggle=\"modal\" onClick={()=>this.props.loadPage(\"Electrician\")} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\r\n\r\nconst SearchPage = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n        <MDBCol md=\"2.5\">\r\n            <MDBFormInline className=\"md-form\">\r\n                <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n                    Search\r\n                </MDBBtn>\r\n            </MDBFormInline>\r\n        </MDBCol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;","import React from \"react\";\r\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPage = () => {\r\n    return (\r\n        <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4 fixed-bottom\">\r\n            <div className=\"text-center py-1\">\r\n                <MDBContainer fluid>\r\n                    &copy; {new Date().getFullYear()} Copyright: <a href=\"https://weiliu423.github.io\"> Wei Liu </a>\r\n                </MDBContainer>\r\n            </div>\r\n        </MDBFooter>\r\n    );\r\n};\r\n\r\nexport default FooterPage;","import React, { Component } from 'react';\r\nimport request from 'superagent';\r\nimport {MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBListGroupItem} from \"mdbreact\";\r\nimport {StyledDropZone }  from 'react-drop-zone'\r\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\r\n\r\nconst CLOUDINARY_UPLOAD_PRESET = 'lshserviceupload';\r\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/predator423/image/upload/';\r\nconst uuidv4 = require('uuid/v4');\r\n\r\n\r\nexport default class Uploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uploadedFile: null,\r\n            uploadedFileCloudinaryUrl: '',\r\n            show: true,\r\n            result: '',\r\n            titleService: '',\r\n            description: '',\r\n            email: '',\r\n            phone: '',\r\n            type: 'Choose a category',\r\n            submitted: false,\r\n            output: [],\r\n            country: '', region: ''\r\n        };\r\n        this.handletitleChange = this.handletitleChange.bind(this);\r\n        this.handledescriptionChange = this.handledescriptionChange.bind(this);\r\n        this.handleUploadSubmit = this.handleUploadSubmit.bind(this);\r\n        this.handleTypeChange = this.handleTypeChange.bind(this);\r\n        this.onShow = this.onShow.bind(this);\r\n        this.loadAllCategory();\r\n    }\r\n    selectCountry (val) {\r\n        this.setState({ country: val });\r\n    }\r\n    selectRegion (val) {\r\n        this.setState({ region: val });\r\n    }\r\n    onShow = ()=> {\r\n        this.setState({ show: true })\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    onImageDrop(files) {\r\n        var ext = files.name.substr(files.name.lastIndexOf('.') + 1);\r\n        console.log(ext);\r\n        if(ext === \"png\" ||ext === \"jpg\"||ext === \"jpeg\" ) {\r\n            this.setState({\r\n                uploadedFile: files\r\n            });\r\n            let reader = new FileReader();\r\n            let file = this.state.uploadedFile;\r\n            reader.onloadend = () => {\r\n                this.setState({\r\n                    file: file,\r\n                    imagePreviewUrl: reader.result\r\n                });\r\n            };\r\n            reader.readAsDataURL(file);\r\n            this.onHide();\r\n            console.log(this.state.uploadedFile);\r\n        }else {\r\n            alert('Invalid file format for image');\r\n        }\r\n    }\r\n    handletitleChange(event) {\r\n        this.setState({\r\n            titleService: event.target.value\r\n        });\r\n    }\r\n    handledescriptionChange(event) {\r\n        if(event.target.value.length < 500)\r\n        {\r\n            this.setState({\r\n                description: event.target.value\r\n            });\r\n        }else{\r\n            alert('Error occurred: Max character reached');\r\n        }\r\n\r\n    }\r\n    loadAllCategory(){\r\n        fetch('https://serviceinfo.azurewebsites.net/getAllCategories', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Cache-Control': 'no-cache'\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(json => {\r\n                    if (json.Success === true) {\r\n                        this.state= {\r\n                            output: []\r\n                        };\r\n                        let view = this.state.output;\r\n                        const  test = [];\r\n                        json.Data.map(function (name) {\r\n                            test.push(name);\r\n                            return name;\r\n                        });\r\n                        for(let i = 0; i < test.length; i++)\r\n                        {\r\n                            /*this.setState({\r\n                                output:test[i]\r\n                            });*/\r\n                            view.push(this.categoryRows(test[i]));\r\n                        }\r\n                        this.setState({\r\n                            output: view\r\n                        });\r\n                        return true\r\n                    } else {\r\n                        return false\r\n                    }\r\n                });\r\n            } else {\r\n                return false\r\n            }\r\n        }).catch(function (ex) {\r\n            alert('Error occur: ' + ex);\r\n        });\r\n    };\r\n    categoryRows(name){\r\n        return(\r\n            <MDBDropdownItem value={name} onClick={this.handleTypeChange}>{name}</MDBDropdownItem>\r\n        )\r\n    }\r\n    handleImageUpload(file) {\r\n        let upload = request.post(CLOUDINARY_UPLOAD_URL)\r\n            .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\r\n            .field('file', file);\r\n\r\n        upload.end((err, response) => {\r\n            if (err) {\r\n                console.error(err);\r\n            }\r\n            if (response.body.secure_url !== '') {\r\n                this.setState({\r\n                    uploadedFileCloudinaryUrl: response.body.secure_url\r\n                });\r\n                console.log(\"Img_link: \" + response.body.secure_url);\r\n                console.log(\r\n                    \"Name:\"+ this.state.titleService +\r\n                    \"\\nTypeName:\" + this.state.type +\r\n                    \"\\nLinkAccountId:\" + 1 +\r\n                    \"\\nDescription:\" + this.state.description +\r\n                    \"\\nAccountName:\" + this.props.username +\r\n                    \"\\nImageLink: \" + this.state.uploadedFileCloudinaryUrl +\r\n                    \"\\nServiceLocation: \" + this.state.region + \", \" + this.state.country\r\n                );\r\n                this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n                fetch('https://serviceinfo.azurewebsites.net/createService', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        Name: this.state.titleService,\r\n                        TypeName: this.state.type,\r\n                        LinkAccountId: 2,\r\n                        Description: this.state.description,\r\n                        ImageLink: this.state.uploadedFileCloudinaryUrl,\r\n                        AccountName: this.props.username,\r\n                        ServiceLocation: this.state.region + \", \" + this.state.country\r\n                    })\r\n                }).then(response => {\r\n                    if (response.ok) {\r\n                        response.json().then(json => {\r\n                            if (json.Success === true) {\r\n                                setTimeout(function () {\r\n                                    this.setState({result: \"Success\"});\r\n                                    this.setState({\r\n                                        uploadedFile: null,\r\n                                        uploadedFileCloudinaryUrl: '',\r\n                                        show: true,\r\n                                        titleService: '',\r\n                                        description: '',\r\n                                        email: '',\r\n                                        phone: '',\r\n                                        type: '',\r\n                                        country: '',\r\n                                        region: ''\r\n                                    });\r\n                                }.bind(this), 2000);\r\n                                return true\r\n                            } else {\r\n                                setTimeout(function () {\r\n                                    this.setState({result: \"Error occurred\"})\r\n                                }.bind(this), 2000);\r\n                                return false\r\n                            }\r\n                        });\r\n                    } else {\r\n                        setTimeout(function () {\r\n                            this.setState({result: \"Error\"})\r\n                        }.bind(this), 2000);\r\n                        return false\r\n                    }\r\n                }).catch(function (ex) {\r\n                  //  alert('Error occurred: ' + ex);\r\n                });\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    handleTypeChange(event) {\r\n        this.setState({\r\n            type: event.target.value\r\n        });\r\n    }\r\n    afterUpload(){\r\n        if(this.state.show)\r\n        {\r\n            return(\r\n                <div>\r\n                    <StyledDropZone onDrop={(file) => {this.onImageDrop(file)}}>\r\n                        {\r\n                            ({ over, overDocument }) =>\r\n                                <div>\r\n                                    {\r\n                                        over ?\r\n                                            'file is over element' :\r\n                                            overDocument ?\r\n                                                'Select or drop your file here, ideal size 400x400' :\r\n                                                'Select or drop your file here, ideal size 400x400'\r\n                                    }\r\n                                </div>\r\n                        }\r\n                    </StyledDropZone>\r\n                </div>\r\n            )\r\n        }else {\r\n\r\n            return(\r\n                <div>\r\n                    {this.state.uploadedFile === '' ? null :\r\n                        <div>\r\n                            <p>{this.state.uploadedFile.name}</p>\r\n                            <img src={this.state.imagePreviewUrl}  height=\"200vw\" width=\"200vw\" alt={\"uploaded\"}/>\r\n                            <button className=\"btn btn-info btn-block my-4\" onClick={this.onShow}>Re-Upload Image</button>\r\n                        </div>}\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n    handleUploadSubmit(event) {\r\n        if(this.state.titleService !==  '' && this.state.description !==  ''\r\n            && this.state.type !== 'Choose a category' && this.state.country !==  '' && this.state.region !==  '' ) {\r\n            this.handleImageUpload(this.state.uploadedFile);\r\n        }else {\r\n            alert('Error occurred: Missing user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        const { country, region } = this.state;\r\n        return (\r\n            <div className=\"mt-10 ml-10 mr-10 mb-10\">\r\n            <form className=\"text-center border border-light p-5 mt-10\" onSubmit={this.handleUploadSubmit}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">{this.afterUpload()}</div>\r\n                        <div className=\"col-md-6\">\r\n                            <p className=\"h4 mb-4\">Service Details</p>\r\n                            <input type=\"text\" id=\"defaultAdsTitle\" className=\"form-control mb-4\" placeholder=\"TITLE\" value={this.state.titleService} onChange={this.handletitleChange}/>\r\n                            <MDBDropdown>\r\n                                <MDBDropdownToggle className=\"btn btn-info btn-block my-4\" caret color=\"primary\">\r\n                                    {this.state.type}\r\n                                </MDBDropdownToggle>\r\n                                <MDBDropdownMenu basic>\r\n                                    {this.state.output}\r\n                                </MDBDropdownMenu>\r\n                                <MDBDropdown>\r\n                                    <CountryDropdown className={\"dropdown-item\"}\r\n                                                     value={country}\r\n                                                     onChange={(val) => this.selectCountry(val)} />\r\n                                    <RegionDropdown className={\"dropdown-item\"}\r\n                                                    country={country}\r\n                                                    value={region}\r\n                                                    onChange={(val) => this.selectRegion(val)} />\r\n                                </MDBDropdown>\r\n                            </MDBDropdown>\r\n                            <div className=\"md-form\">\r\n                                <label htmlFor=\"form7\">DESCRIPTION :</label>\r\n                                <br/>\r\n                                <textarea id=\"form7\" className=\"md-textarea form-control\" rows=\"8\" placeholder=\"MAX characters - 500\" value={this.state.description} onChange={this.handledescriptionChange}/>\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Upload</button>\r\n                    <label className={\"error\"}>{this.state.result}</label>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst SpinnerPage = () => {\r\n    return (\r\n        <>\r\n            <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpinnerPage;","import React, { Component } from 'react';\r\nimport { MDBContainer, MDBBtn, MDBModal, MDBModalBody, MDBModalHeader, MDBModalFooter } from 'mdbreact';\r\n\r\nclass ModalPage extends Component {\r\n    state = {\r\n        modal: false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState({\r\n            modal: !this.state.modal\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MDBContainer>\r\n                <MDBBtn color=\"primary\" size=\"md\" onClick={this.toggle}>Contact us</MDBBtn>\r\n                <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <MDBModalHeader toggle={this.toggle}>Contact Details</MDBModalHeader>\r\n                    <MDBModalBody>\r\n                        Email: {this.props.contactEmail}\r\n                    </MDBModalBody>\r\n                    <MDBModalBody>\r\n                        Phone Number: {this.props.phoneNo}\r\n                    </MDBModalBody>\r\n                    <MDBModalFooter>\r\n                        <MDBBtn color=\"secondary\" onClick={this.toggle}>Close</MDBBtn>\r\n                    </MDBModalFooter>\r\n                </MDBModal>\r\n            </MDBContainer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModalPage;","import React, {Component} from \"react\";\r\nimport {\r\n    MDBView, MDBMask, MDBCard, MDBCardBody, MDBRow, MDBCol\r\n} from \"mdbreact\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\nimport ModalPage from \"./Model\";\r\nconst uuidv4 = require('uuid/v4');\r\nconst dateFormat = require('dateformat');\r\n\r\nexport class ServiceInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            link: '',\r\n            modal: false,\r\n            result: '',\r\n            ImageLink: '',\r\n            title: '',\r\n            description: '',\r\n            createDate: '',\r\n            ServiceLocation: '',\r\n            output:[],\r\n            contactName: 'default',\r\n            contactEmail:'default',\r\n            contactNo:'default',\r\n            show: false,\r\n            showContact: ''\r\n        };\r\n        this.onShow = this.onShow.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n        this.loadAllService();\r\n    }\r\n    loadingBar(){\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state= {\r\n            output: <div><label className={\"error\"}>Please wait while loading service information, Thank you!</label>\r\n                <br /><SpinnerPage /></div>\r\n        };\r\n        console.log(this.state.output);\r\n    }\r\n    onShow = ()=> {\r\n        //this.onShowDetail();\r\n        this.setState({ show: true });\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    loadAllService(){\r\n        this.loadingBar();\r\n        fetch('https://serviceinfo.azurewebsites.net/getServicesByName/'+this.props.category, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Cache-Control': 'no-cache'\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(json => {\r\n                    if (json.Success === true) {\r\n                           //console.log(json.Data);\r\n                        this.state= {\r\n                            output: []\r\n                        };\r\n                           let view = this.state.output;\r\n                           for(let i = 0; i < json.Data.length; i++)\r\n                           {\r\n                               for(let x = 0; x < json.Data[i].serviceInfo.length; x++) {\r\n                                   //console.log(json.Data[i].serviceInfo[x]);\r\n                                   this.setState({\r\n                                       contactName:json.Data[i].ContactName,\r\n                                       contactEmail:json.Data[i].ContactEmail,\r\n                                       contactNo:json.Data[i].ContactNo\r\n                                   });\r\n                                   this.setState({\r\n                                       ImageLink: json.Data[i].serviceInfo[x].ImageLink,\r\n                                       title: json.Data[i].serviceInfo[x].Name,\r\n                                       description: json.Data[i].serviceInfo[x].Description,\r\n                                       createDate: dateFormat(json.Data[i].serviceInfo[x].CreateDate, \"yyyy-mm-dd\"),\r\n                                       ServiceLocation: json.Data[i].serviceInfo[x].ServiceLocation\r\n                                   });\r\n                                   view.push(this.serviceRows());\r\n                                  // json.Data[i].serviceInfo[x].ImageLink, json.Data[i].serviceInfo[x].Name, json.Data[i].serviceInfo[x].Description, json.Data[i].serviceInfo[x].CreateDate)\r\n                               }\r\n                           }\r\n                        setTimeout(function () {\r\n                            this.onHide();\r\n                            this.setState({result: \"Success\"});\r\n                        }.bind(this), 2000);\r\n                        this.setState({\r\n                            output: view\r\n                        });\r\n                        return true\r\n                    } else {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            this.setState({output: ServiceInfo.error()});\r\n                        return false\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({output: this.uploadServiceButton()});\r\n                return false\r\n            }\r\n        }).catch(function (ex) {\r\n            alert('Error occur: ' + ex);\r\n        });\r\n    };\r\n    static error(){\r\n        return(\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                Error occurred\r\n            </div>\r\n        )\r\n    }\r\n    uploadServiceButton(){\r\n         return(\r\n             <div className=\"text-center\">\r\n                 No services submitted, be the first one !\r\n                <button className=\"btn btn-info btn-block my-4\" onClick={this.props.loadUploadService}>Place your services</button>\r\n             </div>\r\n         )\r\n     }\r\n     serviceRows(){\r\n        return(\r\n            <div key={uuidv4()}>\r\n            <MDBRow>\r\n                <MDBCol lg=\"5\" xl=\"4\">\r\n                    <MDBView hover className=\"rounded z-depth-1-half mb-lg-0 mb-4\">\r\n                        <img\r\n                            className=\"img-fluid\"\r\n                            src={this.state.ImageLink}\r\n                            alt=\"\"\r\n                        />\r\n                        <a href=\"#!\">\r\n                            <MDBMask overlay=\"white-slight\" />\r\n                        </a>\r\n                    </MDBView>\r\n                </MDBCol>\r\n                <MDBCol lg=\"7\" xl=\"8\">\r\n                    <h3 className=\"font-weight-bold mb-3 p-0\">\r\n                        <strong>{this.state.title}</strong>\r\n                    </h3>\r\n                    <p className=\"dark-grey-text\">\r\n                        {this.state.description}\r\n                    </p>\r\n                    by <a href=\"#!\" className=\"font-weight-bold\">{this.state.contactName}</a>,  {this.state.createDate}, <i\r\n                    className=\"fas fa-map-marker-alt\"> {this.state.ServiceLocation}</i>\r\n                        <ModalPage contactEmail={this.state.contactEmail} phoneNo={this.state.contactNo}/>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <hr className=\"my-5\" />\r\n            </div>\r\n        )\r\n    }\r\n    serviceAll =() =>{\r\n        return(\r\n            <div>\r\n                <div className=\"container mb-10\">\r\n                    <MDBCard className=\"my-5 px-5 pb-5\">\r\n                        <MDBCardBody className=\"text-center\">\r\n                            {this.state.output}\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.serviceAll()\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport SpinnerPage from './SpinnerPage';\r\n\r\n\r\nexport default class signFormPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fName: '',\r\n            sName: '',\r\n            email: '',\r\n            password: '',\r\n            username: '',\r\n            show: false\r\n        };\r\n\r\n        this.handlefNameChange = this.handlefNameChange.bind(this);\r\n        this.handlesNameChange = this.handlesNameChange.bind(this);\r\n        this.handleemailChange = this.handleemailChange.bind(this);\r\n        this.handlepasswordChange = this.handlepasswordChange.bind(this);\r\n        this.handleusernameChange = this.handleusernameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            window.history.forward()\r\n        }, 0);\r\n        window.onunload= null;\r\n    }\r\n    onShow = ()=> {\r\n        this.setState({ show: true })\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    loading(){\r\n        if(this.state.show){\r\n            return <SpinnerPage />\r\n        }else {\r\n\r\n        }\r\n    }\r\n    loggedin(){\r\n        this.props.checkLog(true);\r\n    }\r\n    handlefNameChange(event) {\r\n        this.setState({\r\n            fName: event.target.value\r\n        });\r\n    }\r\n    handlesNameChange(event) {\r\n        this.setState({\r\n            sName: event.target.value\r\n        });\r\n    }\r\n    handleemailChange(event) {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n    handlepasswordChange(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    handleusernameChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    handleSubmit(event) {\r\n        if(this.state.username !== ''|| this.state.password !== '' || this.state.fName !== '' || this.state.sName !== '' || this.state.email !== '') {\r\n            this.onShow();\r\n            this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n            fetch('https://lshapi.azurewebsites.net/createNewAccount', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    UserName: this.state.username,\r\n                    Password: this.state.password,\r\n                    FirstName: this.state.fName,\r\n                    LastName: this.state.sName,\r\n                    Email: this.state.email\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        if (json.Success === true) {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"Success\"});\r\n                                this.setState({\r\n                                    redirect: true\r\n                                });\r\n                            }.bind(this), 2000);\r\n                            this.props.setUsername(this.state.username);\r\n                            this.loggedin(this.state.redirect);\r\n                            return true\r\n                        } else {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"User exists or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            return false\r\n                        }\r\n                    });\r\n                }else{\r\n                    setTimeout(function () {\r\n                        this.onHide();\r\n                        this.setState({result: \"User exists or Invalid input\"})\r\n                    }.bind(this), 2000);\r\n                    return false\r\n                }\r\n            }).catch(function (ex) {\r\n                alert('Error occurred: ' + ex);\r\n            });\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10\">\r\n            <form className=\"text-center border border-light p-5\" onSubmit={this.handleSubmit}>\r\n            <p className=\"h4 mb-4\">Sign up</p>\r\n        <div className=\"form-row mb-4\">\r\n            <div className=\"col\">\r\n                <input type=\"text\" id=\"defaultRegisterFormFirstName\" className=\"form-control\" placeholder=\"First name\" value={this.state.fName} onChange={this.handlefNameChange}/>\r\n            </div>\r\n            <div className=\"col\">\r\n                <input type=\"text\" id=\"defaultRegisterFormLastName\" className=\"form-control\" placeholder=\"Last name\" value={this.state.sName} onChange={this.handlesNameChange}/>\r\n            </div>\r\n        </div>\r\n        <input type=\"email\" id=\"defaultRegisterFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail\" value={this.state.email} onChange={this.handleemailChange}/>\r\n                <input type=\"username\" id=\"defaultRegisterFormUsername\" className=\"form-control mb-4\" placeholder=\"Username\" value={this.state.username} onChange={this.handleusernameChange}/>\r\n        <input type=\"password\" id=\"defaultRegisterFormPassword\" className=\"form-control\" placeholder=\"Password\"\r\n               aria-describedby=\"defaultRegisterFormPasswordHelpBlock\" value={this.state.password} onChange={this.handlepasswordChange}/>\r\n        <small id=\"defaultRegisterFormPasswordHelpBlock\" className=\"form-text text-muted mb-4\">\r\n            At least 8 characters and 1 digit\r\n        </small>\r\n        <button className=\"btn btn-info my-4 btn-block\" type=\"submit\">Sign in</button>\r\n                <label className={\"error\"}>{this.state.result}</label>\r\n                <br />\r\n                {this.loading()}\r\n        <hr/>\r\n        <p>By clicking <u><em>Sign up</em></u> you agree to our <a href=\"/\" target=\"_blank\">terms of service</a></p>\r\n    </form>\r\n    </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nexport default class LoginFormPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            username: '',\r\n            loginshow: false\r\n        };\r\n\r\n        this.handlepasswordLoginChange = this.handlepasswordLoginChange.bind(this);\r\n        this.handleusernameLoginChange = this.handleusernameLoginChange.bind(this);\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            window.history.forward()\r\n        }, 0);\r\n        window.onunload= null;\r\n    }\r\n    loggedin(){\r\n        this.props.checkLog(true);\r\n    }\r\n    onLoginShow = ()=> {\r\n        this.setState({ loginshow: true })\r\n    };\r\n    onLoginHide = ()=> {\r\n        this.setState({ loginshow: false })\r\n    };\r\n    loginloading(){\r\n        if(this.state.loginshow){\r\n            return <SpinnerPage />\r\n        }\r\n    }\r\n    handlepasswordLoginChange(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    handleusernameLoginChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    handleLoginSubmit(event) {\r\n        if(this.state.username !== ''|| this.state.password !== '' ) {\r\n            this.onLoginShow();\r\n            this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n            fetch('https://lshapi.azurewebsites.net/accountValidation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    UserName: this.state.username,\r\n                    Password: this.state.password\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        if (json.Success === true) {\r\n                            setTimeout(function () {\r\n                                this.onLoginHide();\r\n                                this.setState({result: \"Success\"});\r\n                                this.setState({\r\n                                    redirect: true\r\n                                });\r\n                            }.bind(this), 2000);\r\n                            console.log(\"redirect \"+ this.state.redirect);\r\n                            this.props.setUsername(this.state.username);\r\n                            this.loggedin(this.state.redirect);\r\n                            return true;\r\n                        } else {\r\n                            setTimeout(function () {\r\n                                this.onLoginHide();\r\n                                this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            return false\r\n                        }\r\n                    });\r\n                }else{\r\n                    setTimeout(function () {\r\n                        this.onLoginHide();\r\n                        this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                    }.bind(this), 2000);\r\n                    return false\r\n                }\r\n            }).catch(function (ex) {\r\n                alert('Error occurred: ' + ex);\r\n            });\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10\">\r\n                <form className=\"text-center border border-light p-5 mt-10\" onSubmit={this.handleLoginSubmit}>\r\n                    <p className=\"h4 mb-4\">Sign in</p>\r\n                    <input type=\"text\" id=\"defaultLoginFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail/Username\" value={this.state.username} onChange={this.handleusernameLoginChange}/>\r\n                    <input type=\"password\" id=\"defaultLoginFormPassword\" className=\"form-control mb-4\"\r\n                           placeholder=\"Password\" value={this.state.password} onChange={this.handlepasswordLoginChange}/>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <div>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultLoginFormRemember\"/>\r\n                                <label className=\"custom-control-label\" htmlFor=\"defaultLoginFormRemember\">Remember me</label>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"/\">Forgot password?</a>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Sign in</button>\r\n                    <p>Not a member?<a href=\"/webapp/signup\">Register</a></p>\r\n                    <label className={\"error\"}>{this.state.result}</label>\r\n                    <br />\r\n                    {this.loginloading()}\r\n                    <hr/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {MDBListGroup, MDBListGroupItem, MDBContainer, MDBRow, MDBCol, MDBView, MDBMask} from \"mdbreact\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport class CategoryList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            linkName: '',\r\n            previousName: '',\r\n            output: [],\r\n            checkService: false,\r\n            result: '',\r\n            show: false,\r\n            listName: ''\r\n        };\r\n        this.onShow = this.onShow.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n        this.loadingBar = this.loadingBar.bind(this);\r\n        this.loadAllCategory();\r\n    }\r\n    loadingBar(){\r\n        // eslint-disable-next-line react/no-direct-mutation-state\r\n        this.state= {\r\n            output: <div className={\"text-center\"}><label className={\"error\"}>Please wait while loading service information, Thank you!</label>\r\n                <br /><SpinnerPage /></div>\r\n        };\r\n        console.log(this.state.output);\r\n    }\r\n    onShow = ()=> {\r\n        //this.onShowDetail();\r\n        this.setState({ show: true });\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    error(){\r\n        return(\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                Error occurred\r\n            </div>\r\n        )\r\n    }\r\n    loadAllCategory(){\r\n        this.loadingBar();\r\n        fetch('https://serviceinfo.azurewebsites.net/getAllCategories', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Cache-Control': 'no-cache'\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(json => {\r\n                    if (json.Success === true) {\r\n                        //console.log(json.Data);\r\n                        this.state= {\r\n                            output: []\r\n                        };\r\n                        let view = this.state.output;\r\n                        const  test = [];\r\n                       json.Data.map(function (name) {\r\n                            test.push(name);\r\n                            return name;\r\n                        });\r\n                       for(let i = 0; i < test.length; i++)\r\n                        {\r\n                                this.setState({\r\n                                    listName:test[i]\r\n                                });\r\n                                view.push(this.categoryRows(test[i]));\r\n                        }\r\n                        setTimeout(function () {\r\n                            this.setState({result: \"Success\"});\r\n                        }.bind(this), 2000);\r\n                        this.setState({\r\n                            output: view\r\n                        });\r\n                        return true\r\n                    } else {\r\n                        setTimeout(function () {\r\n                            this.onHide();\r\n                            this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                        }.bind(this), 2000);\r\n                        this.setState({output: this.error()});\r\n                        return false\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({output: this.uploadServiceButton()});\r\n                return false\r\n            }\r\n        }).catch(function (ex) {\r\n            alert('Error occur: ' + ex);\r\n        });\r\n    };\r\n    categoryRows(name){\r\n        return(\r\n            <div key={uuidv4()} className=\"list-group-item\">\r\n                <MDBListGroupItem data-toggle=\"modal\" onClick={() => this.props.loadPage(name)}><a><p className=\"mb-0\">\r\n                    <i className=\"fa fa-arrow-right fa-2x mr-4 red p-3 white-text rounded \" aria-hidden=\"true\"/>{this.state.listName}</p></a></MDBListGroupItem>\r\n            </div>\r\n        )\r\n    }\r\n    CategoryList = () => {\r\n     return (\r\n        <Fragment>\r\n            <MDBContainer>\r\n                <MDBListGroup>\r\n                    <div className=\"list-group-flush ml-10 mr-10\">\r\n                        {this.state.output}\r\n                    </div>\r\n                </MDBListGroup>\r\n            </MDBContainer>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n    render() {\r\n            return (\r\n                this.CategoryList()\r\n            );\r\n    }\r\n}","import React, { Fragment, Component } from 'react';\r\nimport { Button } from \"mdbreact\";\r\nimport NavbarPage from './components/Header';\r\nimport NavbarPageLog from './components/HeaderLogged';\r\nimport ServiceCard from './components/ServiceCard';\r\nimport SearchPage from './components/SearchBar';\r\nimport FooterPage from './components/FooterPage';\r\nimport Uploader from \"./components/IUploader\";\r\nimport {ServiceInfo} from \"./components/ServiceInfo\";\r\nimport SignFormPage from \"./components/signUpForm\";\r\nimport LoginFormPage from \"./components/loginForm\";\r\nimport {CategoryList} from \"./components/CategoryList\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            NavBarChange: \"\",\r\n            default: true,\r\n            loadPageName: '',\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: false,\r\n            username:\"\"\r\n        };\r\n        this.checkLogout =  this.checkLogout.bind(this);\r\n        this.checkLog = this.checkLog.bind(this);\r\n        this.loadHeader = this.loadHeader.bind(this);\r\n        this.loadHome = this.loadHome.bind(this);\r\n        this.loadUploadService = this.loadUploadService.bind(this);\r\n        this.loadPage = this.loadPage.bind(this);\r\n        this.loadLogin = this.loadLogin.bind(this);\r\n        this.loadSignUp = this.loadSignUp.bind(this);\r\n        this.loadCategoryListPage = this.loadCategoryListPage.bind(this);\r\n        this.setUsername = this.setUsername.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadHeader();\r\n    }\r\n    loadHome(){\r\n        this.setState({\r\n            Home: true,\r\n            loadPageName: '',\r\n            default: false,\r\n            UploadService: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadUploadService(){\r\n        this.setState({\r\n            default: false,\r\n            loadPageName: '',\r\n            Home: false,\r\n            UploadService: true,\r\n            Login: false,\r\n            SignUp: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadLogin(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Login: true,\r\n            SignUp: false,\r\n            loadPageName: '',\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadSignUp(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Login: false,\r\n            SignUp: true,\r\n            loadPageName: '',\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadPage(name){\r\n        this.setState({\r\n            loadPageName: name,\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadCategoryListPage(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            loadPageName: '',\r\n            Login: false,\r\n            SignUp: false,\r\n            CategoryListPage: true\r\n        });\r\n    }\r\n    setUsername(name){\r\n        this.setState({\r\n            username: name\r\n        });\r\n    }\r\n    checkLogout(){\r\n        console.log(\" log out: \"+this.state.isLogged );\r\n        this.setState({\r\n            isLogged: false\r\n        });\r\n        console.log(\" log out: \"+this.state.isLogged );\r\n        if(this.state.isLogged === false) {\r\n            console.log(\"loaded log out + false\");\r\n            this.loadHeader();\r\n            this.loadHome();\r\n        }\r\n    }\r\n    checkLog(){\r\n        if(this.state.isLogged === false)\r\n        this.setState({\r\n            isLogged: true\r\n        });\r\n        if(this.state.isLogged === true && this.state.username !== \"\"){\r\n            console.log(\"loaded login + true\");\r\n            this.loadHeader();\r\n            this.loadHome();\r\n        }\r\n    }\r\n    loadHeader(){\r\n        if(this.state.isLogged !== true){\r\n            this.setState({\r\n                NavBarChange: <NavbarPage\r\n                    username={this.state.username}\r\n                    loadHome={this.loadHome}\r\n                    loadUploadService={this.loadUploadService}\r\n                    loadLogin={this.loadLogin}\r\n                    loadSignUp={this.loadSignUp}\r\n                    loadCategoryListPage={this.loadCategoryListPage}/>\r\n            });\r\n        }else{\r\n            this.setState({\r\n                NavBarChange: <NavbarPageLog\r\n                    username={this.state.username}\r\n                    checkLogout ={this.checkLogout}\r\n                    loadHome={this.loadHome}\r\n                    loadUploadService={this.loadUploadService}\r\n                    loadLogin={this.loadLogin}\r\n                    loadSignUp={this.loadSignUp}\r\n                    loadCategoryListPage={this.loadCategoryListPage}/>\r\n            });\r\n        }\r\n    }\r\n\r\n    Home = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <div className=\"container mb-10\">\r\n                <ServiceCard loadPage={this.loadPage}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    UploadService = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container mb-10\">\r\n                <Uploader username={this.state.username}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    Login = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container\">\r\n                <LoginFormPage checkLog ={this.checkLog} setUsername={this.setUsername} />\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    SignUp = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container\">\r\n                <SignFormPage checkLog ={this.checkLog} setUsername={this.setUsername}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    CategoryListPage = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container mb-10\">\r\n                <CategoryList  loadPage={this.loadPage}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    servicePage = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <ServiceInfo category={this.state.loadPageName}/>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n\r\n\r\n    render() {\r\n        if(this.state.default)\r\n        {\r\n            return (\r\n                this.Home()\r\n            );\r\n        } else if(this.state.Home)\r\n        {\r\n            return (\r\n                this.Home()\r\n            );\r\n        }else if(this.state.UploadService === true)\r\n        {\r\n            if(this.state.isLogged === true){\r\n                return (\r\n                    this.UploadService()\r\n                );\r\n            }else{\r\n                return (\r\n                    <Fragment>\r\n                        {this.state.NavBarChange}\r\n                        <div className=\"container mb-10 center-block\">\r\n                            <h3 className={\"text-center mt-10\"}>Please login first before upload your services!</h3>\r\n                            <Button className={\"btn btn-info btn-block my-4\"} onClick={this.loadLogin}>Login</Button>\r\n                        </div>\r\n                        <FooterPage/>\r\n                    </Fragment>\r\n                )\r\n            }\r\n\r\n        }else if(this.state.Login)\r\n        {\r\n            return (\r\n                this.Login()\r\n            );\r\n        }else if(this.state.SignUp)\r\n        {\r\n            return (\r\n                this.SignUp()\r\n            );\r\n        }else if(this.state.loadPageName !== '')\r\n        {\r\n            return (\r\n                this.servicePage()\r\n            );\r\n        }else if(this.state.CategoryListPage)\r\n        {\r\n            return (\r\n                this.CategoryListPage()\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                window.location.reload();\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'react-drop-zone/dist/styles.css'\r\nimport './App.css'\r\nimport App from './App';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Router basename=\"/webapp\">\r\n        <div>\r\n            <Route exact path=\"/\" component={App}/>\r\n        </div>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n//serviceWorker.unregister();\r\n//unregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/courses.675581ad.png\";","module.exports = __webpack_public_path__ + \"static/media/tutor.0badb2e7.png\";","module.exports = __webpack_public_path__ + \"static/media/repair.bacd0415.png\";","module.exports = __webpack_public_path__ + \"static/media/travel.6e85a04b.png\";","module.exports = __webpack_public_path__ + \"static/media/wellness.7e54d25b.png\";","module.exports = __webpack_public_path__ + \"static/media/electrician.614ea8f3.png\";"],"sourceRoot":""}
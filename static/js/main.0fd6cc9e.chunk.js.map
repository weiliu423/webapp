{"version":3,"sources":["components/Header.js","components/HeaderLogged.js","components/ServiceCard.js","components/SearchBar.js","components/FooterPage.js","components/IUploader.js","components/SpinnerPage.js","components/ServiceInfo.js","components/signUpForm.js","components/loginForm.js","components/CategoryList.js","App.js","serviceWorker.js","index.js","img/courses.png","img/tutor.png","img/repair.png","img/travel.png","img/wellness.png","img/electrician.png"],"names":["NavbarPage","state","isOpen","collapsed","clicked","toggleCollapse","_this","setState","react_default","a","createElement","mdbreact_esm","color","dark","expand","className","onClick","this","id","navbar","left","active","type","props","loadHome","loadUploadService","loadCategoryListPage","right","loadLogin","loadSignUp","Component","NavbarPageLog","username","checkLogout","ServiceCard","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","show","react","Card","CardImg","top","width","height","src","course","alt","CardBody","CardTitle","Button","data-toggle","loadCoursePage","size","tutor","loadTutor","repair","loadRepairs","travel","wellness","electrician","SearchPage","md","placeholder","aria-label","gradient","rounded","FooterPage","fluid","Date","getFullYear","href","Uploader","onShow","onHide","uploadedFile","uploadedFileCloudinaryUrl","result","titleService","description","email","phone","submitted","handletitleChange","bind","assertThisInitialized","handledescriptionChange","handleUploadSubmit","handleTypeChange","files","_this2","ext","name","substr","lastIndexOf","console","log","reader","FileReader","file","onloadend","imagePreviewUrl","readAsDataURL","alert","event","target","value","length","_this3","request","post","field","end","err","response","error","body","secure_url","fetch","method","headers","Accept","Content-Type","JSON","stringify","Name","TypeName","LinkAccountId","Description","ImageLink","AccountName","then","ok","setTimeout","json","Success","catch","ex","_this4","dist","onDrop","onImageDrop","_ref","over","overDocument","handleImageUpload","preventDefault","onSubmit","afterUpload","onChange","caret","basic","htmlFor","rows","SpinnerPage","Fragment","role","uuidv4","require","ServiceInfo","_Component","serviceAll","output","link","title","createDate","loadAllService","inherits","createClass","key","components_SpinnerPage","loadingBar","category","Access-Control-Allow-Origin","Cache-Control","uploadServiceButton","view","i","Data","x","serviceInfo","CreateDate","push","serviceRows","lg","xl","hover","overlay","signFormPage","fName","sName","password","handlefNameChange","handlesNameChange","handleemailChange","handlepasswordChange","handleusernameChange","handleSubmit","window","history","forward","onunload","checkLog","UserName","Password","FirstName","LastName","Email","redirect","setUsername","loggedin","aria-describedby","loading","React","LoginFormPage","onLoginShow","loginshow","onLoginHide","handlepasswordLoginChange","handleusernameLoginChange","handleLoginSubmit","loginloading","CategoryList","aria-hidden","linkName","previousName","checkService","App","Home","NavBarChange","SearchBar","ServiceCard_ServiceCard","loadRepairsPage","components_FooterPage","UploadService","IUploader_Uploader","Tutor","ServiceInfo_ServiceInfo","Login","loginForm_LoginFormPage","SignUp","signUpForm_signFormPage","CoursePage","Repairs","Travel","Wellness","Electrician","CategoryListPage","CategoryList_CategoryList","isLogged","default","loadHeader","Header","HeaderLogged","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reload","ReactDOM","render","BrowserRouter","basename","Route","exact","path","component","document","getElementById","URL","process","origin","addEventListener","concat","contentType","get","status","indexOf","ready","unregister","checkValidServiceWorker","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0fd6cc9e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\n    MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon, Button } from \"mdbreact\";\r\n\r\nclass NavbarPage extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        collapsed: false,\r\n        clicked: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n    render() {\r\n        return (\r\n            <MDBNavbar color=\"blue\" dark expand=\"md\">\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">LSH</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem active>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn \" onClick={this.props.loadHome}>Home</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadUploadService}>Place your services</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadCategoryListPage}>Services</button>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadLogin}>Download APP!</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                    <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadLogin}>Login</button>\r\n                                     |\r\n                                    <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadSignUp}>Sign up</button>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPage;","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\n    MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\n\r\nclass NavbarPageLog extends Component {\r\n    state = {\r\n        isOpen: false,\r\n        collapsed: false,\r\n        clicked: false\r\n    };\r\n\r\n    toggleCollapse = () => {\r\n        this.setState({ isOpen: !this.state.isOpen });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <MDBNavbar color=\"blue\" dark expand=\"md\">\r\n                <MDBNavbarBrand>\r\n                    <strong className=\"white-text\">LSH</strong>\r\n                </MDBNavbarBrand>\r\n                <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n                <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n                    <MDBNavbarNav left>\r\n                        <MDBNavItem active>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadHome}>Home</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadUploadService}>Place your services</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadCategoryListPage}>Services</button>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                    <MDBNavbarNav right>\r\n                        <MDBNavItem>\r\n                            <p className=\"navBtn nameText\">Hi {this.props.username} |</p>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.loadLogin}>Download APP!</button>\r\n                        </MDBNavItem>\r\n                        <MDBNavItem>\r\n                            <MDBDropdown>\r\n                                <button type=\"button\" className=\"btn btn-link navBtn\" onClick={this.props.checkLogout}>Log out</button>\r\n                            </MDBDropdown>\r\n                        </MDBNavItem>\r\n                    </MDBNavbarNav>\r\n                </MDBCollapse>\r\n            </MDBNavbar>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NavbarPageLog;","import React, {Component, Fragment} from 'react';\r\nimport course from '../img/courses.png'\r\nimport tutor from '../img/tutor.png'\r\nimport repair from '../img/repair.png'\r\nimport travel from '../img/travel.png'\r\nimport wellness from '../img/wellness.png'\r\nimport electrician from '../img/electrician.png'\r\n\r\n\r\nimport {\r\n    Button, Card, CardImg, CardBody,\r\n    CardTitle\r\n} from 'reactstrap';\r\nimport {MDBListGroupItem} from \"mdbreact\";\r\n\r\n\r\nexport default class ServiceCard extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            show: false\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div >\r\n            <div className=\"row\">\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={course} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Courses</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={this.props.loadCoursePage} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={tutor} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Tutors</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={this.props.loadTutor} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n                <div className=\"col-sm mt-2\">\r\n                    <Fragment>\r\n                        <Card>\r\n                            <CardImg top width=\"100%\" height=\"200\" src={repair} alt=\"banner\" />\r\n                            <CardBody>\r\n                                <CardTitle className=\"h4-responsive mb-2s text-secondary\">Repairs</CardTitle>\r\n                                <div className=\"d-flex justify-content-center\">\r\n                                    <Button data-toggle=\"modal\" onClick={this.props.loadRepairs} color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                </div>\r\n                            </CardBody>\r\n                        </Card>\r\n                    </Fragment>\r\n                </div>\r\n            </div>\r\n                <div className=\"row mt-3\">\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={travel} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Travel</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={wellness} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Wellness</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                    <div className=\"col-sm mt-2\">\r\n                        <Fragment>\r\n                            <Card>\r\n                                <CardImg top width=\"100%\" height=\"200\" src={electrician} alt=\"banner\" />\r\n                                <CardBody>\r\n                                    <CardTitle className=\"h4-responsive mb-2s text-secondary\">Electrician</CardTitle>\r\n                                    <div className=\"d-flex justify-content-center\">\r\n                                        <Button color=\"success\" size=\"sm\" className=\"font-weight-light\">View Services</Button>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>\r\n                        </Fragment>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport { MDBCol, MDBFormInline, MDBBtn } from \"mdbreact\";\r\n\r\nconst SearchPage = () => {\r\n    return (\r\n        <div className=\"d-flex justify-content-center\">\r\n        <MDBCol md=\"2.5\">\r\n            <MDBFormInline className=\"md-form\">\r\n                <input className=\"form-control\" type=\"text\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                <MDBBtn gradient=\"aqua\" rounded size=\"sm\" type=\"submit\" className=\"mr-auto\">\r\n                    Search\r\n                </MDBBtn>\r\n            </MDBFormInline>\r\n        </MDBCol>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;","import React from \"react\";\r\nimport { MDBContainer, MDBFooter } from \"mdbreact\";\r\n\r\nconst FooterPage = () => {\r\n    return (\r\n        <MDBFooter color=\"blue\" className=\"font-small pt-4 mt-4 fixed-bottom\">\r\n            <div className=\"text-center py-1\">\r\n                <MDBContainer fluid>\r\n                    &copy; {new Date().getFullYear()} Copyright: <a href=\"https://weiliu423.github.io\"> Wei Liu </a>\r\n                </MDBContainer>\r\n            </div>\r\n        </MDBFooter>\r\n    );\r\n};\r\n\r\nexport default FooterPage;","import React, { Component } from 'react';\r\nimport request from 'superagent';\r\nimport { MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem } from \"mdbreact\";\r\nimport {StyledDropZone }  from 'react-drop-zone'\r\n\r\n\r\nconst CLOUDINARY_UPLOAD_PRESET = 'lshserviceupload';\r\nconst CLOUDINARY_UPLOAD_URL = 'https://api.cloudinary.com/v1_1/predator423/image/upload/';\r\n\r\nexport default class Uploader extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            uploadedFile: null,\r\n            uploadedFileCloudinaryUrl: '',\r\n            show: true,\r\n            result: '',\r\n            titleService: '',\r\n            description: '',\r\n            email: '',\r\n            phone: '',\r\n            type: 'Choose a category',\r\n            submitted: false\r\n        };\r\n        this.handletitleChange = this.handletitleChange.bind(this);\r\n        this.handledescriptionChange = this.handledescriptionChange.bind(this);\r\n        this.handleUploadSubmit = this.handleUploadSubmit.bind(this);\r\n        this.handleTypeChange = this.handleTypeChange.bind(this);\r\n        this.onShow = this.onShow.bind(this);\r\n    }\r\n\r\n    onShow = ()=> {\r\n        this.setState({ show: true })\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    onImageDrop(files) {\r\n        var ext = files.name.substr(files.name.lastIndexOf('.') + 1);\r\n        console.log(ext);\r\n        if(ext === \"png\" ||ext === \"jpg\"||ext === \"jpeg\" ) {\r\n            this.setState({\r\n                uploadedFile: files\r\n            });\r\n            let reader = new FileReader();\r\n            let file = this.state.uploadedFile;\r\n            reader.onloadend = () => {\r\n                this.setState({\r\n                    file: file,\r\n                    imagePreviewUrl: reader.result\r\n                });\r\n            };\r\n            reader.readAsDataURL(file);\r\n            this.onHide();\r\n            console.log(this.state.uploadedFile);\r\n        }else {\r\n            alert('Invalid file format for image');\r\n        }\r\n    }\r\n    handletitleChange(event) {\r\n        this.setState({\r\n            titleService: event.target.value\r\n        });\r\n    }\r\n    handledescriptionChange(event) {\r\n        if(event.target.value.length < 500)\r\n        {\r\n            this.setState({\r\n                description: event.target.value\r\n            });\r\n        }else{\r\n            alert('Error occurred: Max character reached');\r\n        }\r\n\r\n    }\r\n    handleImageUpload(file) {\r\n        let upload = request.post(CLOUDINARY_UPLOAD_URL)\r\n            .field('upload_preset', CLOUDINARY_UPLOAD_PRESET)\r\n            .field('file', file);\r\n\r\n        upload.end((err, response) => {\r\n            if (err) {\r\n                console.error(err);\r\n            }\r\n            if (response.body.secure_url !== '') {\r\n                this.setState({\r\n                    uploadedFileCloudinaryUrl: response.body.secure_url\r\n                });\r\n                console.log(\"Img_link: \" + response.body.secure_url);\r\n                console.log(\r\n                    \"Name:\"+ this.state.titleService +\r\n                    \"\\nTypeName:\" + this.state.type +\r\n                    \"\\nLinkAccountId:\" + 1 +\r\n                    \"\\nDescription:\" + this.state.description +\r\n                    \"\\nAccountName:\" + this.props.username +\r\n                    \"\\nImageLink: \" + this.state.uploadedFileCloudinaryUrl);\r\n                this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n                fetch('https://serviceinfo.azurewebsites.net/createService', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        Name: this.state.titleService,\r\n                        TypeName: this.state.type,\r\n                        LinkAccountId: 2,\r\n                        Description: this.state.description,\r\n                        ImageLink: this.state.uploadedFileCloudinaryUrl,\r\n                        AccountName: this.props.username\r\n                    })\r\n                }).then(response => {\r\n                    if (response.ok) {\r\n                        response.json().then(json => {\r\n                            if (json.Success === true) {\r\n                                setTimeout(function () {\r\n                                    this.setState({result: \"Success\"});\r\n                                    this.setState({\r\n                                        uploadedFile: null,\r\n                                        uploadedFileCloudinaryUrl: '',\r\n                                        show: true,\r\n                                        titleService: '',\r\n                                        description: '',\r\n                                        email: '',\r\n                                        phone: '',\r\n                                        type: '',\r\n                                    });\r\n                                }.bind(this), 2000);\r\n                                return true\r\n                            } else {\r\n                                setTimeout(function () {\r\n                                    this.setState({result: \"Error occurred\"})\r\n                                }.bind(this), 2000);\r\n                                return false\r\n                            }\r\n                        });\r\n                    } else {\r\n                        setTimeout(function () {\r\n                            this.setState({result: \"Error\"})\r\n                        }.bind(this), 2000);\r\n                        return false\r\n                    }\r\n                }).catch(function (ex) {\r\n                    alert('Error occurred: ' + ex);\r\n                });\r\n            }\r\n\r\n\r\n        });\r\n    }\r\n    handleTypeChange(event) {\r\n        this.setState({\r\n            type: event.target.value\r\n        });\r\n    }\r\n    afterUpload(){\r\n        if(this.state.show)\r\n        {\r\n            return(\r\n                <div>\r\n                    <StyledDropZone onDrop={(file) => {this.onImageDrop(file)}}>\r\n                        {\r\n                            ({ over, overDocument }) =>\r\n                                <div>\r\n                                    {\r\n                                        over ?\r\n                                            'file is over element' :\r\n                                            overDocument ?\r\n                                                'Select or drop your file here, ideal size 400x400' :\r\n                                                'Select or drop your file here, ideal size 400x400'\r\n                                    }\r\n                                </div>\r\n                        }\r\n                    </StyledDropZone>\r\n                </div>\r\n            )\r\n        }else {\r\n\r\n            return(\r\n                <div>\r\n                    {this.state.uploadedFile === '' ? null :\r\n                        <div>\r\n                            <p>{this.state.uploadedFile.name}</p>\r\n                            <img src={this.state.imagePreviewUrl}  height=\"200vw\" width=\"200vw\" alt={\"uploaded\"}/>\r\n                            <button className=\"btn btn-info btn-block my-4\" onClick={this.onShow}>Re-Upload Image</button>\r\n                        </div>}\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n    handleUploadSubmit(event) {\r\n        if(this.state.titleService !==  '' && this.state.description !==  '' && this.state.type !== 'Choose a category' ) {\r\n            this.handleImageUpload(this.state.uploadedFile);\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10 ml-10 mr-10 mb-10\">\r\n            <form className=\"text-center border border-light p-5 mt-10\" onSubmit={this.handleUploadSubmit}>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">{this.afterUpload()}</div>\r\n                        <div className=\"col-md-6\">\r\n                            <p className=\"h4 mb-4\">Service Details</p>\r\n                            <input type=\"text\" id=\"defaultAdsTitle\" className=\"form-control mb-4\" placeholder=\"TITLE\" value={this.state.titleService} onChange={this.handletitleChange}/>\r\n                            <MDBDropdown>\r\n                                <MDBDropdownToggle className=\"btn btn-info btn-block my-4\" caret color=\"primary\">\r\n                                    {this.state.type}\r\n                                </MDBDropdownToggle>\r\n                                <MDBDropdownMenu basic>\r\n                                    <MDBDropdownItem value=\"Courses\" onClick={this.handleTypeChange}>Course</MDBDropdownItem>\r\n                                    <MDBDropdownItem value=\"Tutors\" onClick={this.handleTypeChange}>Tutor</MDBDropdownItem>\r\n                                    <MDBDropdownItem value=\"Repairs\" onClick={this.handleTypeChange}>Repairs</MDBDropdownItem>\r\n                                </MDBDropdownMenu>\r\n                            </MDBDropdown>\r\n                            <div className=\"md-form\">\r\n                                <label htmlFor=\"form7\">DESCRIPTION :</label>\r\n                                <br/>\r\n                                <textarea id=\"form7\" className=\"md-textarea form-control\" rows=\"8\" placeholder=\"MAX characters - 500\" value={this.state.description} onChange={this.handledescriptionChange}/>\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Upload</button>\r\n                    <label className={\"error\"}>{this.state.result}</label>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst SpinnerPage = () => {\r\n    return (\r\n        <>\r\n            <div className=\"spinner-grow text-primary\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-success\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-danger\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-warning\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n            <div className=\"spinner-grow text-info\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SpinnerPage;","import React, {Component} from \"react\";\r\nimport {\r\n    MDBView,\r\n    MDBMask, MDBCard, MDBCardBody, MDBRow, MDBCol, MDBBtn\r\n} from \"mdbreact\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\nconst uuidv4 = require('uuid/v4');\r\n\r\nexport class ServiceInfo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            link: '',\r\n            result: '',\r\n            ImageLink: '',\r\n            title: '',\r\n            description: '',\r\n            createDate: '',\r\n            output:[],\r\n            show: false\r\n        };\r\n       // this.loadingBar = this.loadingBar.bind(this);\r\n        this.onShow = this.onShow.bind(this);\r\n        this.onHide = this.onHide.bind(this);\r\n        this.loadAllService();\r\n    }\r\n    loadingBar(){\r\n        this.state= {\r\n            output: <div><label className={\"error\"}>Please wait while loading service information, Thank you!</label>\r\n                <br /><SpinnerPage /></div>\r\n        };\r\n        console.log(this.state.output);\r\n    }\r\n    onShow = ()=> {\r\n        this.setState({ show: true });\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    loadAllService(){\r\n        this.onShow();\r\n        this.loadingBar();\r\n        fetch('https://serviceinfo.azurewebsites.net/getServicesByName/'+this.props.category, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Access-Control-Allow-Origin': '*',\r\n                'Cache-Control': 'no-cache'\r\n            }\r\n        }).then(response => {\r\n            if (response.ok) {\r\n                response.json().then(json => {\r\n                    if (json.Success === true) {\r\n                           //console.log(json.Data);\r\n                        this.state= {\r\n                            output: []\r\n                        };\r\n                           let view = this.state.output;\r\n                           for(let i = 0; i < json.Data.length; i++)\r\n                           {\r\n                               for(let x = 0; x < json.Data[i].serviceInfo.length; x++) {\r\n                                   //console.log(json.Data[i].serviceInfo[x]);\r\n                                   this.setState({\r\n                                       ImageLink: json.Data[i].serviceInfo[x].ImageLink,\r\n                                       title: json.Data[i].serviceInfo[x].Name,\r\n                                       description: json.Data[i].serviceInfo[x].Description,\r\n                                       createDate: json.Data[i].serviceInfo[x].CreateDate\r\n                                   });\r\n                                   view.push(this.serviceRows());\r\n                                  // json.Data[i].serviceInfo[x].ImageLink, json.Data[i].serviceInfo[x].Name, json.Data[i].serviceInfo[x].Description, json.Data[i].serviceInfo[x].CreateDate)\r\n                               }\r\n                           }\r\n                        setTimeout(function () {\r\n                            this.onHide();\r\n                            this.setState({result: \"Success\"});\r\n                        }.bind(this), 2000);\r\n                        this.setState({\r\n                            output: view\r\n                        });\r\n                        return true\r\n                    } else {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            this.setState({output: ServiceInfo.error()});\r\n                        return false\r\n                    }\r\n                });\r\n            } else {\r\n                this.setState({output: this.uploadServiceButton()});\r\n                return false\r\n            }\r\n        }).catch(function (ex) {\r\n            alert('Error occur: ' + ex);\r\n        });\r\n    };\r\n    static error(){\r\n        return(\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n                Error occurred\r\n            </div>\r\n        )\r\n    }\r\n    uploadServiceButton(){\r\n         return(\r\n             <div className=\"text-center\">\r\n                 No services submitted, be the first one !\r\n                <button className=\"btn btn-info btn-block my-4\" onClick={this.props.loadUploadService}>Place your services</button>\r\n             </div>\r\n         )\r\n     }\r\n     serviceRows(){\r\n        return(\r\n            <div key={uuidv4()}>\r\n            <MDBRow>\r\n                <MDBCol lg=\"5\" xl=\"4\">\r\n                    <MDBView hover className=\"rounded z-depth-1-half mb-lg-0 mb-4\">\r\n                        <img\r\n                            className=\"img-fluid\"\r\n                            src={this.state.ImageLink}\r\n                            alt=\"\"\r\n                        />\r\n                        <a href=\"#!\">\r\n                            <MDBMask overlay=\"white-slight\" />\r\n                        </a>\r\n                    </MDBView>\r\n                </MDBCol>\r\n                <MDBCol lg=\"7\" xl=\"8\">\r\n                    <h3 className=\"font-weight-bold mb-3 p-0\">\r\n                        <strong>{this.state.title}</strong>\r\n                    </h3>\r\n                    <p className=\"dark-grey-text\">\r\n                        {this.state.description}\r\n                    </p>\r\n                    <p>\r\n                        by <a href=\"#!\" className=\"font-weight-bold\">Cork Institute of Technology</a>, {this.state.createDate}\r\n                    </p>\r\n                    <MDBBtn color=\"primary\" size=\"md\">\r\n                        Contact us\r\n                    </MDBBtn>\r\n                </MDBCol>\r\n            </MDBRow>\r\n            <hr className=\"my-5\" />\r\n            </div>\r\n        )\r\n    }\r\n    serviceAll =() =>{\r\n        return(\r\n            <div>\r\n                <div className=\"container mb-10\">\r\n                    <MDBCard className=\"my-5 px-5 pb-5\">\r\n                        <MDBCardBody className=\"text-center\">\r\n                            {this.state.output}\r\n                        </MDBCardBody>\r\n                    </MDBCard>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            this.serviceAll()\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\n\r\nimport SpinnerPage from './SpinnerPage';\r\n\r\n\r\nexport default class signFormPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            fName: '',\r\n            sName: '',\r\n            email: '',\r\n            password: '',\r\n            username: '',\r\n            show: false\r\n        };\r\n\r\n        this.handlefNameChange = this.handlefNameChange.bind(this);\r\n        this.handlesNameChange = this.handlesNameChange.bind(this);\r\n        this.handleemailChange = this.handleemailChange.bind(this);\r\n        this.handlepasswordChange = this.handlepasswordChange.bind(this);\r\n        this.handleusernameChange = this.handleusernameChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            window.history.forward()\r\n        }, 0);\r\n        window.onunload= null;\r\n    }\r\n    onShow = ()=> {\r\n        this.setState({ show: true })\r\n    };\r\n    onHide = ()=> {\r\n        this.setState({ show: false })\r\n    };\r\n    loading(){\r\n        if(this.state.show){\r\n            return <SpinnerPage />\r\n        }else {\r\n\r\n        }\r\n    }\r\n    loggedin(){\r\n        this.props.checkLog(true);\r\n    }\r\n    handlefNameChange(event) {\r\n        this.setState({\r\n            fName: event.target.value\r\n        });\r\n    }\r\n    handlesNameChange(event) {\r\n        this.setState({\r\n            sName: event.target.value\r\n        });\r\n    }\r\n    handleemailChange(event) {\r\n        this.setState({\r\n            email: event.target.value\r\n        });\r\n    }\r\n    handlepasswordChange(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    handleusernameChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    handleSubmit(event) {\r\n        if(this.state.username !== ''|| this.state.password !== '' || this.state.fName !== '' || this.state.sName !== '' || this.state.email !== '') {\r\n            this.onShow();\r\n            this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n            fetch('https://lshapi.azurewebsites.net/createNewAccount', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    UserName: this.state.username,\r\n                    Password: this.state.password,\r\n                    FirstName: this.state.fName,\r\n                    LastName: this.state.sName,\r\n                    Email: this.state.email\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        if (json.Success === true) {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"Success\"});\r\n                                this.setState({\r\n                                    redirect: true\r\n                                });\r\n                            }.bind(this), 2000);\r\n                            this.props.setUsername(this.state.username);\r\n                            this.loggedin(this.state.redirect);\r\n                            return true\r\n                        } else {\r\n                            setTimeout(function () {\r\n                                this.onHide();\r\n                                this.setState({result: \"User exists or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            return false\r\n                        }\r\n                    });\r\n                }else{\r\n                    setTimeout(function () {\r\n                        this.onHide();\r\n                        this.setState({result: \"User exists or Invalid input\"})\r\n                    }.bind(this), 2000);\r\n                    return false\r\n                }\r\n            }).catch(function (ex) {\r\n                alert('Error occurred: ' + ex);\r\n            });\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10\">\r\n            <form className=\"text-center border border-light p-5\" onSubmit={this.handleSubmit}>\r\n            <p className=\"h4 mb-4\">Sign up</p>\r\n        <div className=\"form-row mb-4\">\r\n            <div className=\"col\">\r\n                <input type=\"text\" id=\"defaultRegisterFormFirstName\" className=\"form-control\" placeholder=\"First name\" value={this.state.fName} onChange={this.handlefNameChange}/>\r\n            </div>\r\n            <div className=\"col\">\r\n                <input type=\"text\" id=\"defaultRegisterFormLastName\" className=\"form-control\" placeholder=\"Last name\" value={this.state.sName} onChange={this.handlesNameChange}/>\r\n            </div>\r\n        </div>\r\n        <input type=\"email\" id=\"defaultRegisterFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail\" value={this.state.email} onChange={this.handleemailChange}/>\r\n                <input type=\"username\" id=\"defaultRegisterFormUsername\" className=\"form-control mb-4\" placeholder=\"Username\" value={this.state.username} onChange={this.handleusernameChange}/>\r\n        <input type=\"password\" id=\"defaultRegisterFormPassword\" className=\"form-control\" placeholder=\"Password\"\r\n               aria-describedby=\"defaultRegisterFormPasswordHelpBlock\" value={this.state.password} onChange={this.handlepasswordChange}/>\r\n        <small id=\"defaultRegisterFormPasswordHelpBlock\" className=\"form-text text-muted mb-4\">\r\n            At least 8 characters and 1 digit\r\n        </small>\r\n        <button className=\"btn btn-info my-4 btn-block\" type=\"submit\">Sign in</button>\r\n                <label className={\"error\"}>{this.state.result}</label>\r\n                <br />\r\n                {this.loading()}\r\n        <hr/>\r\n        <p>By clicking <u><em>Sign up</em></u> you agree to our <a href=\"/\" target=\"_blank\">terms of service</a></p>\r\n    </form>\r\n    </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport SpinnerPage from \"./SpinnerPage\";\r\nimport Redirect from \"react-router-dom/es/Redirect\";\r\n\r\nexport default class LoginFormPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            username: '',\r\n            loginshow: false\r\n        };\r\n\r\n        this.handlepasswordLoginChange = this.handlepasswordLoginChange.bind(this);\r\n        this.handleusernameLoginChange = this.handleusernameLoginChange.bind(this);\r\n        this.handleLoginSubmit = this.handleLoginSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        setTimeout(() => {\r\n            window.history.forward()\r\n        }, 0);\r\n        window.onunload= null;\r\n    }\r\n    loggedin(){\r\n        this.props.checkLog(true);\r\n    }\r\n    onLoginShow = ()=> {\r\n        this.setState({ loginshow: true })\r\n    };\r\n    onLoginHide = ()=> {\r\n        this.setState({ loginshow: false })\r\n    };\r\n    loginloading(){\r\n        if(this.state.loginshow){\r\n            return <SpinnerPage />\r\n        }\r\n    }\r\n    handlepasswordLoginChange(event) {\r\n        this.setState({\r\n            password: event.target.value\r\n        });\r\n    }\r\n    handleusernameLoginChange(event) {\r\n        this.setState({\r\n            username: event.target.value\r\n        });\r\n    }\r\n    handleLoginSubmit(event) {\r\n        if(this.state.username !== ''|| this.state.password !== '' ) {\r\n            this.onLoginShow();\r\n            this.setState({result: \"Validating, Please Wait. Thank You\\n\"});\r\n            fetch('https://lshapi.azurewebsites.net/accountValidation', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    UserName: this.state.username,\r\n                    Password: this.state.password\r\n                })\r\n            }).then(response => {\r\n                if (response.ok) {\r\n                    response.json().then(json => {\r\n                        if (json.Success === true) {\r\n                            setTimeout(function () {\r\n                                this.onLoginHide();\r\n                                this.setState({result: \"Success\"});\r\n                                this.setState({\r\n                                    redirect: true\r\n                                });\r\n                            }.bind(this), 2000);\r\n                            console.log(\"redirect \"+ this.state.redirect);\r\n                            this.props.setUsername(this.state.username);\r\n                            this.loggedin(this.state.redirect);\r\n                            return true;\r\n                        } else {\r\n                            setTimeout(function () {\r\n                                this.onLoginHide();\r\n                                this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                            }.bind(this), 2000);\r\n                            return false\r\n                        }\r\n                    });\r\n                }else{\r\n                    setTimeout(function () {\r\n                        this.onLoginHide();\r\n                        this.setState({result: \"User doesn't exist or Invalid input\"})\r\n                    }.bind(this), 2000);\r\n                    return false\r\n                }\r\n            }).catch(function (ex) {\r\n                alert('Error occurred: ' + ex);\r\n            });\r\n        }else {\r\n            alert('Error occurred: No user input');\r\n        }\r\n        event.preventDefault();\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"mt-10\">\r\n                <form className=\"text-center border border-light p-5 mt-10\" onSubmit={this.handleLoginSubmit}>\r\n                    <p className=\"h4 mb-4\">Sign in</p>\r\n                    <input type=\"text\" id=\"defaultLoginFormEmail\" className=\"form-control mb-4\" placeholder=\"E-mail/Username\" value={this.state.username} onChange={this.handleusernameLoginChange}/>\r\n                    <input type=\"password\" id=\"defaultLoginFormPassword\" className=\"form-control mb-4\"\r\n                           placeholder=\"Password\" value={this.state.password} onChange={this.handlepasswordLoginChange}/>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <div>\r\n                            <div className=\"custom-control custom-checkbox\">\r\n                                <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultLoginFormRemember\"/>\r\n                                <label className=\"custom-control-label\" htmlFor=\"defaultLoginFormRemember\">Remember me</label>\r\n                            </div>\r\n                        </div>\r\n                        <div>\r\n                            <a href=\"/\">Forgot password?</a>\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-info btn-block my-4\" type=\"submit\">Sign in</button>\r\n                    <p>Not a member?<a href=\"/webapp/signup\">Register</a></p>\r\n                    <label className={\"error\"}>{this.state.result}</label>\r\n                    <br />\r\n                    {this.loginloading()}\r\n                    <hr/>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n","import React, {Component, Fragment} from \"react\";\r\nimport { MDBListGroup, MDBListGroupItem, MDBContainer } from \"mdbreact\";\r\nimport NavbarPage from \"../App\";\r\n\r\nexport class CategoryList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            linkName: '',\r\n            previousName: '',\r\n            checkService: false\r\n        };\r\n    }\r\n     CategoryList = () => {\r\n     return (\r\n        <Fragment>\r\n            <MDBContainer>\r\n                <MDBListGroup>\r\n                    <div className=\"list-group-flush ml-10 mr-10\">\r\n                        <div className=\"list-group-item\">\r\n                            <MDBListGroupItem data-toggle=\"modal\" onClick={this.props.loadCoursePage}><a><p className=\"mb-0\"><i className=\"fa fa-arrow-right fa-2x mr-4 red p-3 white-text rounded \" aria-hidden=\"true\"/>Courses</p></a></MDBListGroupItem>\r\n                        </div>\r\n                        <div className=\"list-group-item\">\r\n                            <MDBListGroupItem data-toggle=\"modal\" onClick={this.props.loadTutor}><a><p className=\"mb-0\"><i className=\"fa fa-arrow-right fa-2x mr-4 mr-4 orange p-3 white-text rounded\"\r\n                                                                                                          aria-hidden=\"true\"/>Tutors</p></a></MDBListGroupItem>\r\n                        </div>\r\n                        <div className=\"list-group-item\">\r\n                            <MDBListGroupItem data-toggle=\"modal\" onClick={this.props.loadRepairs}><a><p className=\"mb-0\"><i className=\"fa fa-arrow-right fa-2x mr-4 mr-4 green p-3 white-text rounded\"\r\n                                                                                 aria-hidden=\"true\"/>Repairs</p></a></MDBListGroupItem>\r\n                        </div>\r\n                        <div className=\"list-group-item\">\r\n                            <MDBListGroupItem href=\"#\"><a><p className=\"mb-0\"><i className=\"fa fa-arrow-right fa-2x mr-4 grey p-3 white-text rounded \"\r\n                                                                                 aria-hidden=\"true\"/>Travel</p></a></MDBListGroupItem>\r\n                        </div>\r\n                        <div className=\"list-group-item\">\r\n                            <MDBListGroupItem href=\"#\"><a><p className=\"mb-0\"><i className=\"fa fa-arrow-right fa-2x mr-4 mr-4 cyan p-3 white-text rounded\"\r\n                                                                                 aria-hidden=\"true\"/>Wellness</p></a></MDBListGroupItem>\r\n                        </div>\r\n                        <div className=\"list-group-item\">\r\n                            <MDBListGroupItem href=\"#\"><a><p className=\"mb-0\"><i className=\"fa fa-arrow-right fa-2x mr-4 mr-4 yellow p-3 white-text rounded\"\r\n                                                                                 aria-hidden=\"true\"/>Electrician</p></a></MDBListGroupItem>\r\n                        </div>\r\n                    </div>\r\n                </MDBListGroup>\r\n            </MDBContainer>\r\n\r\n        </Fragment>\r\n    );\r\n};\r\n\r\n    render() {\r\n            return (\r\n                this.CategoryList()\r\n            );\r\n\r\n    }\r\n}","import React, { Fragment, Component } from 'react';\r\nimport { Button } from \"mdbreact\";\r\nimport NavbarPage from './components/Header';\r\nimport NavbarPageLog from './components/HeaderLogged';\r\nimport ServiceCard from './components/ServiceCard';\r\nimport SearchPage from './components/SearchBar';\r\nimport FooterPage from './components/FooterPage';\r\nimport Uploader from \"./components/IUploader\";\r\nimport {ServiceInfo} from \"./components/ServiceInfo\";\r\nimport SignFormPage from \"./components/signUpForm\";\r\nimport LoginFormPage from \"./components/loginForm\";\r\nimport {CategoryList} from \"./components/CategoryList\";\r\n\r\nexport default class App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isLogged: false,\r\n            NavBarChange: \"\",\r\n            default: true,\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: false,\r\n            username:\"\"\r\n        };\r\n        this.checkLogout =  this.checkLogout.bind(this);\r\n        this.checkLog = this.checkLog.bind(this);\r\n        this.loadHeader = this.loadHeader.bind(this);\r\n        this.loadHome = this.loadHome.bind(this);\r\n        this.loadUploadService = this.loadUploadService.bind(this);\r\n        this.loadTutor = this.loadTutor.bind(this);\r\n        this.loadLogin = this.loadLogin.bind(this);\r\n        this.loadSignUp = this.loadSignUp.bind(this);\r\n        this.loadCoursePage = this.loadCoursePage.bind(this);\r\n        this.loadCategoryListPage = this.loadCategoryListPage.bind(this);\r\n        this.loadRepairsPage  = this.loadRepairsPage.bind(this);\r\n        this.setUsername = this.setUsername.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.loadHeader();\r\n    }\r\n\r\n    loadHome(){\r\n        this.setState({\r\n            default: false,\r\n            Home: true,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadUploadService(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: true,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadTutor(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: true,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadLogin(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: true,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadSignUp(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: true,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadCoursePage(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: true,\r\n            Repairs: false,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    loadCategoryListPage(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: false,\r\n            CategoryListPage: true\r\n        });\r\n    }\r\n    loadRepairsPage(){\r\n        this.setState({\r\n            default: false,\r\n            Home: false,\r\n            UploadService: false,\r\n            Tutor: false,\r\n            Login: false,\r\n            SignUp: false,\r\n            CoursePage: false,\r\n            Repairs: true,\r\n            CategoryListPage: false\r\n        });\r\n    }\r\n    setUsername(name){\r\n        this.setState({\r\n            username: name\r\n        });\r\n    }\r\n    checkLogout(){\r\n        console.log(\" log out: \"+this.state.isLogged );\r\n        this.setState({\r\n            isLogged: false\r\n        });\r\n        console.log(\" log out: \"+this.state.isLogged );\r\n        if(this.state.isLogged === false) {\r\n            console.log(\"loaded log out + false\");\r\n            this.loadHeader();\r\n            this.loadHome();\r\n        }\r\n    }\r\n    checkLog(){\r\n        if(this.state.isLogged === false)\r\n        this.setState({\r\n            isLogged: true\r\n        });\r\n        if(this.state.isLogged === true && this.state.username !== \"\"){\r\n            console.log(\"loaded login + true\");\r\n            this.loadHeader();\r\n            this.loadHome();\r\n        }\r\n    }\r\n    loadHeader(){\r\n        if(this.state.isLogged !== true){\r\n            this.setState({\r\n                NavBarChange: <NavbarPage\r\n                    username={this.state.username}\r\n                    loadHome={this.loadHome}\r\n                    loadUploadService={this.loadUploadService}\r\n                    loadLogin={this.loadLogin}\r\n                    loadSignUp={this.loadSignUp}\r\n                    loadCategoryListPage={this.loadCategoryListPage}/>\r\n            });\r\n        }else{\r\n            this.setState({\r\n                NavBarChange: <NavbarPageLog\r\n                    username={this.state.username}\r\n                    checkLogout ={this.checkLogout}\r\n                    loadHome={this.loadHome}\r\n                    loadUploadService={this.loadUploadService}\r\n                    loadLogin={this.loadLogin}\r\n                    loadSignUp={this.loadSignUp}\r\n                    loadCategoryListPage={this.loadCategoryListPage}/>\r\n            });\r\n        }\r\n    }\r\n\r\n    Home = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <div className=\"container mb-10\">\r\n                <ServiceCard loadCoursePage={this.loadCoursePage}\r\n                             loadTutor={this.loadTutor}\r\n                             loadRepairs={this.loadRepairsPage}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    UploadService = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container mb-10\">\r\n                <Uploader username={this.state.username}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    Tutor = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <ServiceInfo category={\"Tutors\"}\r\n                         loadUploadService={this.loadUploadService}/>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    Login = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container\">\r\n                <LoginFormPage checkLog ={this.checkLog} setUsername={this.setUsername} />\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    SignUp = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container\">\r\n                <SignFormPage checkLog ={this.checkLog} setUsername={this.setUsername}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    CoursePage = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <ServiceInfo category={\"Courses\"}/>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    Repairs = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <ServiceInfo category={\"Repairs\"}/>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    Travel = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <ServiceInfo category={\"Travel\"}/>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    Wellness = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <ServiceInfo category={\"Wellness\"}/>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    Electrician = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <SearchPage />\r\n            <ServiceInfo category={\"Electrician\"}/>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    CategoryListPage = () => (\r\n        <Fragment>\r\n            {this.state.NavBarChange}\r\n            <div className=\"container mb-10\">\r\n                <CategoryList  loadCoursePage={this.loadCoursePage}\r\n                               loadTutor={this.loadTutor}\r\n                               loadRepairs={this.loadRepairsPage}/>\r\n            </div>\r\n            <FooterPage/>\r\n        </Fragment>\r\n    );\r\n    render() {\r\n        if(this.state.default)\r\n        {\r\n            return (\r\n                this.Home()\r\n            );\r\n        } else if(this.state.Home)\r\n        {\r\n            return (\r\n                this.Home()\r\n            );\r\n        }else if(this.state.UploadService === true)\r\n        {\r\n            if(this.state.isLogged === true){\r\n                return (\r\n                    this.UploadService()\r\n                );\r\n            }else{\r\n                return (\r\n                    <Fragment>\r\n                        {this.state.NavBarChange}\r\n                        <div className=\"container mb-10 center-block\">\r\n                            <h3 className={\"text-center mt-10\"}>Please login first before upload your services!</h3>\r\n                            <Button className={\"btn btn-info btn-block my-4\"} onClick={this.loadLogin}>Login</Button>\r\n                        </div>\r\n                        <FooterPage/>\r\n                    </Fragment>\r\n                )\r\n            }\r\n\r\n        }else if(this.state.Tutor)\r\n        {\r\n            return (\r\n                this.Tutor()\r\n            );\r\n        }else if(this.state.Login)\r\n        {\r\n            return (\r\n                this.Login()\r\n            );\r\n        }else if(this.state.SignUp)\r\n        {\r\n            return (\r\n                this.SignUp()\r\n            );\r\n        }else if(this.state.CoursePage)\r\n        {\r\n            return (\r\n                this.CoursePage()\r\n            );\r\n        }else if(this.state.CategoryListPage)\r\n        {\r\n            return (\r\n                this.CategoryListPage()\r\n            );\r\n        }else if(this.state.Repairs)\r\n        {\r\n            return (\r\n                this.Repairs()\r\n            );\r\n        }\r\n\r\n    }\r\n}\r\n\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                window.location.reload();\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport 'react-drop-zone/dist/styles.css'\r\nimport './App.css'\r\nimport App from './App';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Route,\r\n} from 'react-router-dom';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n    <Router basename=\"/webapp\">\r\n        <div>\r\n            <Route exact path=\"/\" component={App}/>\r\n        </div>\r\n    </Router>\r\n    , document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n//serviceWorker.unregister();\r\n//unregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/courses.675581ad.png\";","module.exports = __webpack_public_path__ + \"static/media/tutor.0badb2e7.png\";","module.exports = __webpack_public_path__ + \"static/media/repair.bacd0415.png\";","module.exports = __webpack_public_path__ + \"static/media/travel.6e85a04b.png\";","module.exports = __webpack_public_path__ + \"static/media/wellness.7e54d25b.png\";","module.exports = __webpack_public_path__ + \"static/media/electrician.614ea8f3.png\";"],"sourceRoot":""}